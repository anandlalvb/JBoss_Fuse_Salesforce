/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject MailmergeTemplate
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("MailmergeTemplate")
public class MailmergeTemplate extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // Description
    private String Description;

    @JsonProperty("Description")
    public String getDescription() {
        return this.Description;
    }

    @JsonProperty("Description")
    public void setDescription(String Description) {
        this.Description = Description;
    }

    // Filename
    private String Filename;

    @JsonProperty("Filename")
    public String getFilename() {
        return this.Filename;
    }

    @JsonProperty("Filename")
    public void setFilename(String Filename) {
        this.Filename = Filename;
    }

    // BodyLength
    private Integer BodyLength;

    @JsonProperty("BodyLength")
    public Integer getBodyLength() {
        return this.BodyLength;
    }

    @JsonProperty("BodyLength")
    public void setBodyLength(Integer BodyLength) {
        this.BodyLength = BodyLength;
    }

    // Body
    // blob field url, use getBlobField to get the content
    @XStreamAlias("Body")
    private String BodyUrl;

    @JsonProperty("Body")
    public String getBodyUrl() {
        return this.BodyUrl;
    }

    @JsonProperty("Body")
    public void setBodyUrl(String BodyUrl) {
        this.BodyUrl = BodyUrl;
    }

    // LastUsedDate
    private java.time.ZonedDateTime LastUsedDate;

    @JsonProperty("LastUsedDate")
    public java.time.ZonedDateTime getLastUsedDate() {
        return this.LastUsedDate;
    }

    @JsonProperty("LastUsedDate")
    public void setLastUsedDate(java.time.ZonedDateTime LastUsedDate) {
        this.LastUsedDate = LastUsedDate;
    }

    // SecurityOptionsAttachmentScannedForXSS
    private Boolean SecurityOptionsAttachmentScannedForXSS;

    @JsonProperty("SecurityOptionsAttachmentScannedForXSS")
    public Boolean getSecurityOptionsAttachmentScannedForXSS() {
        return this.SecurityOptionsAttachmentScannedForXSS;
    }

    @JsonProperty("SecurityOptionsAttachmentScannedForXSS")
    public void setSecurityOptionsAttachmentScannedForXSS(Boolean SecurityOptionsAttachmentScannedForXSS) {
        this.SecurityOptionsAttachmentScannedForXSS = SecurityOptionsAttachmentScannedForXSS;
    }

    // SecurityOptionsAttachmentHasXSSThreat
    private Boolean SecurityOptionsAttachmentHasXSSThreat;

    @JsonProperty("SecurityOptionsAttachmentHasXSSThreat")
    public Boolean getSecurityOptionsAttachmentHasXSSThreat() {
        return this.SecurityOptionsAttachmentHasXSSThreat;
    }

    @JsonProperty("SecurityOptionsAttachmentHasXSSThreat")
    public void setSecurityOptionsAttachmentHasXSSThreat(Boolean SecurityOptionsAttachmentHasXSSThreat) {
        this.SecurityOptionsAttachmentHasXSSThreat = SecurityOptionsAttachmentHasXSSThreat;
    }

    // SecurityOptionsAttachmentScannedforFlash
    private Boolean SecurityOptionsAttachmentScannedforFlash;

    @JsonProperty("SecurityOptionsAttachmentScannedforFlash")
    public Boolean getSecurityOptionsAttachmentScannedforFlash() {
        return this.SecurityOptionsAttachmentScannedforFlash;
    }

    @JsonProperty("SecurityOptionsAttachmentScannedforFlash")
    public void setSecurityOptionsAttachmentScannedforFlash(Boolean SecurityOptionsAttachmentScannedforFlash) {
        this.SecurityOptionsAttachmentScannedforFlash = SecurityOptionsAttachmentScannedforFlash;
    }

    // SecurityOptionsAttachmentHasFlash
    private Boolean SecurityOptionsAttachmentHasFlash;

    @JsonProperty("SecurityOptionsAttachmentHasFlash")
    public Boolean getSecurityOptionsAttachmentHasFlash() {
        return this.SecurityOptionsAttachmentHasFlash;
    }

    @JsonProperty("SecurityOptionsAttachmentHasFlash")
    public void setSecurityOptionsAttachmentHasFlash(Boolean SecurityOptionsAttachmentHasFlash) {
        this.SecurityOptionsAttachmentHasFlash = SecurityOptionsAttachmentHasFlash;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Mail Merge Template ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("Name", "Name", "string", "xsd:string", 80, false, false, true, false, false, false, true);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("Description", "Description", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("Filename", "File", "string", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("BodyLength", "Body Length", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("Body", "Body", "base64", "xsd:base64Binary", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("LastUsedDate", "Last Used Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("SecurityOptionsAttachmentScannedForXSS", "Attachment has been scanned for XSS", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("SecurityOptionsAttachmentHasXSSThreat", "XSS threat was detected in the attachment", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("SecurityOptionsAttachmentScannedforFlash", "Attachment has been scanned for Flash Injection", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("SecurityOptionsAttachmentHasFlash", "Flash Injection was detected in the attachment", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField17);

        description.setLabelPlural("Mail Merge Template");
        description.setLabel("Mail Merge Template");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/MailmergeTemplate/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/MailmergeTemplate");
        sObjectDescriptionUrls1.setUiEditTemplate("https://na57.salesforce.com/{ID}/e");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/MailmergeTemplate/{ID}");
        sObjectDescriptionUrls1.setUiNewRecord("https://na57.salesforce.com/01H/e");
        sObjectDescriptionUrls1.setUiDetailTemplate("https://na57.salesforce.com/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("MailmergeTemplate");

        return description;
    }
}
