/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject AccountShare
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("AccountShare")
public class AccountShare extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // AccountId
    private String AccountId;

    @JsonProperty("AccountId")
    public String getAccountId() {
        return this.AccountId;
    }

    @JsonProperty("AccountId")
    public void setAccountId(String AccountId) {
        this.AccountId = AccountId;
    }

    // UserOrGroupId
    private String UserOrGroupId;

    @JsonProperty("UserOrGroupId")
    public String getUserOrGroupId() {
        return this.UserOrGroupId;
    }

    @JsonProperty("UserOrGroupId")
    public void setUserOrGroupId(String UserOrGroupId) {
        this.UserOrGroupId = UserOrGroupId;
    }

    // AccountAccessLevel
    @XStreamConverter(PicklistEnumConverter.class)
    private AccountShare_AccountAccessLevelEnum AccountAccessLevel;

    @JsonProperty("AccountAccessLevel")
    public AccountShare_AccountAccessLevelEnum getAccountAccessLevel() {
        return this.AccountAccessLevel;
    }

    @JsonProperty("AccountAccessLevel")
    public void setAccountAccessLevel(AccountShare_AccountAccessLevelEnum AccountAccessLevel) {
        this.AccountAccessLevel = AccountAccessLevel;
    }

    // OpportunityAccessLevel
    @XStreamConverter(PicklistEnumConverter.class)
    private AccountShare_OpportunityAccessLevelEnum OpportunityAccessLevel;

    @JsonProperty("OpportunityAccessLevel")
    public AccountShare_OpportunityAccessLevelEnum getOpportunityAccessLevel() {
        return this.OpportunityAccessLevel;
    }

    @JsonProperty("OpportunityAccessLevel")
    public void setOpportunityAccessLevel(AccountShare_OpportunityAccessLevelEnum OpportunityAccessLevel) {
        this.OpportunityAccessLevel = OpportunityAccessLevel;
    }

    // CaseAccessLevel
    @XStreamConverter(PicklistEnumConverter.class)
    private AccountShare_CaseAccessLevelEnum CaseAccessLevel;

    @JsonProperty("CaseAccessLevel")
    public AccountShare_CaseAccessLevelEnum getCaseAccessLevel() {
        return this.CaseAccessLevel;
    }

    @JsonProperty("CaseAccessLevel")
    public void setCaseAccessLevel(AccountShare_CaseAccessLevelEnum CaseAccessLevel) {
        this.CaseAccessLevel = CaseAccessLevel;
    }

    // ContactAccessLevel
    @XStreamConverter(PicklistEnumConverter.class)
    private AccountShare_ContactAccessLevelEnum ContactAccessLevel;

    @JsonProperty("ContactAccessLevel")
    public AccountShare_ContactAccessLevelEnum getContactAccessLevel() {
        return this.ContactAccessLevel;
    }

    @JsonProperty("ContactAccessLevel")
    public void setContactAccessLevel(AccountShare_ContactAccessLevelEnum ContactAccessLevel) {
        this.ContactAccessLevel = ContactAccessLevel;
    }

    // RowCause
    @XStreamConverter(PicklistEnumConverter.class)
    private AccountShare_RowCauseEnum RowCause;

    @JsonProperty("RowCause")
    public AccountShare_RowCauseEnum getRowCause() {
        return this.RowCause;
    }

    @JsonProperty("RowCause")
    public void setRowCause(AccountShare_RowCauseEnum RowCause) {
        this.RowCause = RowCause;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Account Share ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("AccountId", "Account ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("UserOrGroupId", "User/Group ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("AccountAccessLevel", "Account Access", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("OpportunityAccessLevel", "Opportunity Access", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("CaseAccessLevel", "Case Access", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("ContactAccessLevel", "Contact Access", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("RowCause", "Row Cause", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);

        description.setLabelPlural("Account Share");
        description.setLabel("Account Share");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/AccountShare/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/AccountShare");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/AccountShare/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("AccountShare");

        return description;
    }
}
