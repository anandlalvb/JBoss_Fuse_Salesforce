/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject KnowledgeableUser
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("KnowledgeableUser")
public class KnowledgeableUser extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // UserId
    private String UserId;

    @JsonProperty("UserId")
    public String getUserId() {
        return this.UserId;
    }

    @JsonProperty("UserId")
    public void setUserId(String UserId) {
        this.UserId = UserId;
    }

    // TopicId
    private String TopicId;

    @JsonProperty("TopicId")
    public String getTopicId() {
        return this.TopicId;
    }

    @JsonProperty("TopicId")
    public void setTopicId(String TopicId) {
        this.TopicId = TopicId;
    }

    // RawRank
    private Integer RawRank;

    @JsonProperty("RawRank")
    public Integer getRawRank() {
        return this.RawRank;
    }

    @JsonProperty("RawRank")
    public void setRawRank(Integer RawRank) {
        this.RawRank = RawRank;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Knowledgeable User ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("UserId", "User ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("TopicId", "Topic ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("RawRank", "Rank", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);

        description.setLabelPlural("Knowledgeable Users");
        description.setLabel("Knowledgeable User");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/KnowledgeableUser/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/KnowledgeableUser");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/KnowledgeableUser/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("KnowledgeableUser");

        return description;
    }
}
