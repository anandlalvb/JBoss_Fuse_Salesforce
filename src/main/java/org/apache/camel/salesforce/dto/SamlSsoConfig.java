/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject SamlSsoConfig
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("SamlSsoConfig")
public class SamlSsoConfig extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // DeveloperName
    private String DeveloperName;

    @JsonProperty("DeveloperName")
    public String getDeveloperName() {
        return this.DeveloperName;
    }

    @JsonProperty("DeveloperName")
    public void setDeveloperName(String DeveloperName) {
        this.DeveloperName = DeveloperName;
    }

    // Language
    @XStreamConverter(PicklistEnumConverter.class)
    private SamlSsoConfig_LanguageEnum Language;

    @JsonProperty("Language")
    public SamlSsoConfig_LanguageEnum getLanguage() {
        return this.Language;
    }

    @JsonProperty("Language")
    public void setLanguage(SamlSsoConfig_LanguageEnum Language) {
        this.Language = Language;
    }

    // MasterLabel
    private String MasterLabel;

    @JsonProperty("MasterLabel")
    public String getMasterLabel() {
        return this.MasterLabel;
    }

    @JsonProperty("MasterLabel")
    public void setMasterLabel(String MasterLabel) {
        this.MasterLabel = MasterLabel;
    }

    // NamespacePrefix
    private String NamespacePrefix;

    @JsonProperty("NamespacePrefix")
    public String getNamespacePrefix() {
        return this.NamespacePrefix;
    }

    @JsonProperty("NamespacePrefix")
    public void setNamespacePrefix(String NamespacePrefix) {
        this.NamespacePrefix = NamespacePrefix;
    }

    // Version
    @XStreamConverter(PicklistEnumConverter.class)
    private SamlSsoConfig_VersionEnum Version;

    @JsonProperty("Version")
    public SamlSsoConfig_VersionEnum getVersion() {
        return this.Version;
    }

    @JsonProperty("Version")
    public void setVersion(SamlSsoConfig_VersionEnum Version) {
        this.Version = Version;
    }

    // Issuer
    private String Issuer;

    @JsonProperty("Issuer")
    public String getIssuer() {
        return this.Issuer;
    }

    @JsonProperty("Issuer")
    public void setIssuer(String Issuer) {
        this.Issuer = Issuer;
    }

    // OptionsSpInitBinding
    private Boolean OptionsSpInitBinding;

    @JsonProperty("OptionsSpInitBinding")
    public Boolean getOptionsSpInitBinding() {
        return this.OptionsSpInitBinding;
    }

    @JsonProperty("OptionsSpInitBinding")
    public void setOptionsSpInitBinding(Boolean OptionsSpInitBinding) {
        this.OptionsSpInitBinding = OptionsSpInitBinding;
    }

    // OptionsUserProvisioning
    private Boolean OptionsUserProvisioning;

    @JsonProperty("OptionsUserProvisioning")
    public Boolean getOptionsUserProvisioning() {
        return this.OptionsUserProvisioning;
    }

    @JsonProperty("OptionsUserProvisioning")
    public void setOptionsUserProvisioning(Boolean OptionsUserProvisioning) {
        this.OptionsUserProvisioning = OptionsUserProvisioning;
    }

    // AttributeFormat
    private String AttributeFormat;

    @JsonProperty("AttributeFormat")
    public String getAttributeFormat() {
        return this.AttributeFormat;
    }

    @JsonProperty("AttributeFormat")
    public void setAttributeFormat(String AttributeFormat) {
        this.AttributeFormat = AttributeFormat;
    }

    // AttributeName
    private String AttributeName;

    @JsonProperty("AttributeName")
    public String getAttributeName() {
        return this.AttributeName;
    }

    @JsonProperty("AttributeName")
    public void setAttributeName(String AttributeName) {
        this.AttributeName = AttributeName;
    }

    // Audience
    private String Audience;

    @JsonProperty("Audience")
    public String getAudience() {
        return this.Audience;
    }

    @JsonProperty("Audience")
    public void setAudience(String Audience) {
        this.Audience = Audience;
    }

    // IdentityMapping
    @XStreamConverter(PicklistEnumConverter.class)
    private SamlSsoConfig_IdentityMappingEnum IdentityMapping;

    @JsonProperty("IdentityMapping")
    public SamlSsoConfig_IdentityMappingEnum getIdentityMapping() {
        return this.IdentityMapping;
    }

    @JsonProperty("IdentityMapping")
    public void setIdentityMapping(SamlSsoConfig_IdentityMappingEnum IdentityMapping) {
        this.IdentityMapping = IdentityMapping;
    }

    // IdentityLocation
    @XStreamConverter(PicklistEnumConverter.class)
    private SamlSsoConfig_IdentityLocationEnum IdentityLocation;

    @JsonProperty("IdentityLocation")
    public SamlSsoConfig_IdentityLocationEnum getIdentityLocation() {
        return this.IdentityLocation;
    }

    @JsonProperty("IdentityLocation")
    public void setIdentityLocation(SamlSsoConfig_IdentityLocationEnum IdentityLocation) {
        this.IdentityLocation = IdentityLocation;
    }

    // SamlJitHandlerId
    private String SamlJitHandlerId;

    @JsonProperty("SamlJitHandlerId")
    public String getSamlJitHandlerId() {
        return this.SamlJitHandlerId;
    }

    @JsonProperty("SamlJitHandlerId")
    public void setSamlJitHandlerId(String SamlJitHandlerId) {
        this.SamlJitHandlerId = SamlJitHandlerId;
    }

    // ExecutionUserId
    private String ExecutionUserId;

    @JsonProperty("ExecutionUserId")
    public String getExecutionUserId() {
        return this.ExecutionUserId;
    }

    @JsonProperty("ExecutionUserId")
    public void setExecutionUserId(String ExecutionUserId) {
        this.ExecutionUserId = ExecutionUserId;
    }

    // LoginUrl
    private String LoginUrl;

    @JsonProperty("LoginUrl")
    public String getLoginUrl() {
        return this.LoginUrl;
    }

    @JsonProperty("LoginUrl")
    public void setLoginUrl(String LoginUrl) {
        this.LoginUrl = LoginUrl;
    }

    // LogoutUrl
    private String LogoutUrl;

    @JsonProperty("LogoutUrl")
    public String getLogoutUrl() {
        return this.LogoutUrl;
    }

    @JsonProperty("LogoutUrl")
    public void setLogoutUrl(String LogoutUrl) {
        this.LogoutUrl = LogoutUrl;
    }

    // ErrorUrl
    private String ErrorUrl;

    @JsonProperty("ErrorUrl")
    public String getErrorUrl() {
        return this.ErrorUrl;
    }

    @JsonProperty("ErrorUrl")
    public void setErrorUrl(String ErrorUrl) {
        this.ErrorUrl = ErrorUrl;
    }

    // ValidationCert
    private String ValidationCert;

    @JsonProperty("ValidationCert")
    public String getValidationCert() {
        return this.ValidationCert;
    }

    @JsonProperty("ValidationCert")
    public void setValidationCert(String ValidationCert) {
        this.ValidationCert = ValidationCert;
    }

    // RequestSignatureMethod
    @XStreamConverter(PicklistEnumConverter.class)
    private SamlSsoConfig_RequestSignatureMethodEnum RequestSignatureMethod;

    @JsonProperty("RequestSignatureMethod")
    public SamlSsoConfig_RequestSignatureMethodEnum getRequestSignatureMethod() {
        return this.RequestSignatureMethod;
    }

    @JsonProperty("RequestSignatureMethod")
    public void setRequestSignatureMethod(SamlSsoConfig_RequestSignatureMethodEnum RequestSignatureMethod) {
        this.RequestSignatureMethod = RequestSignatureMethod;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "SAML Single Sign-On Setting ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("DeveloperName", "Name", "string", "xsd:string", 80, false, false, true, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("Language", "Master Language", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("MasterLabel", "Label", "string", "xsd:string", 80, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("NamespacePrefix", "Namespace Prefix", "string", "xsd:string", 15, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("Version", "SAML Version", "picklist", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("Issuer", "Issuer", "string", "xsd:string", 255, false, false, false, false, false, false, true);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("OptionsSpInitBinding", "SpInitBinding", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("OptionsUserProvisioning", "UserProvisioning", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("AttributeFormat", "Name ID Format", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("AttributeName", "Attribute Name", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("Audience", "Entity ID", "string", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("IdentityMapping", "SAML Identity Type", "picklist", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("IdentityLocation", "SAML Identity Location", "picklist", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField20);
        final SObjectField sObjectField21 = createField("SamlJitHandlerId", "Class ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField21);
        final SObjectField sObjectField22 = createField("ExecutionUserId", "User ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField22);
        final SObjectField sObjectField23 = createField("LoginUrl", "Identity Provider Login URL", "string", "xsd:string", 1500, false, true, false, false, false, false, false);
        fields1.add(sObjectField23);
        final SObjectField sObjectField24 = createField("LogoutUrl", "Identity Provider Logout URL", "string", "xsd:string", 1500, false, true, false, false, false, false, false);
        fields1.add(sObjectField24);
        final SObjectField sObjectField25 = createField("ErrorUrl", "Custom Error URL", "string", "xsd:string", 500, false, true, false, false, false, false, false);
        fields1.add(sObjectField25);
        final SObjectField sObjectField26 = createField("ValidationCert", "Identity Provider Certificate", "string", "xsd:string", 4000, false, false, false, false, false, false, false);
        fields1.add(sObjectField26);
        final SObjectField sObjectField27 = createField("RequestSignatureMethod", "Request Signature Method", "picklist", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField27);

        description.setLabelPlural("SAML Single Sign-On Settings");
        description.setLabel("SAML Single Sign-On Setting");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/SamlSsoConfig/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/SamlSsoConfig");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/SamlSsoConfig/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("SamlSsoConfig");

        return description;
    }
}
