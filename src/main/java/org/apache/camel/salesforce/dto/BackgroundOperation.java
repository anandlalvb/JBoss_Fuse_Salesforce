/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject BackgroundOperation
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("BackgroundOperation")
public class BackgroundOperation extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // SubmittedAt
    private java.time.ZonedDateTime SubmittedAt;

    @JsonProperty("SubmittedAt")
    public java.time.ZonedDateTime getSubmittedAt() {
        return this.SubmittedAt;
    }

    @JsonProperty("SubmittedAt")
    public void setSubmittedAt(java.time.ZonedDateTime SubmittedAt) {
        this.SubmittedAt = SubmittedAt;
    }

    // Status
    @XStreamConverter(PicklistEnumConverter.class)
    private BackgroundOperation_StatusEnum Status;

    @JsonProperty("Status")
    public BackgroundOperation_StatusEnum getStatus() {
        return this.Status;
    }

    @JsonProperty("Status")
    public void setStatus(BackgroundOperation_StatusEnum Status) {
        this.Status = Status;
    }

    // ExecutionGroup
    private String ExecutionGroup;

    @JsonProperty("ExecutionGroup")
    public String getExecutionGroup() {
        return this.ExecutionGroup;
    }

    @JsonProperty("ExecutionGroup")
    public void setExecutionGroup(String ExecutionGroup) {
        this.ExecutionGroup = ExecutionGroup;
    }

    // SequenceGroup
    private String SequenceGroup;

    @JsonProperty("SequenceGroup")
    public String getSequenceGroup() {
        return this.SequenceGroup;
    }

    @JsonProperty("SequenceGroup")
    public void setSequenceGroup(String SequenceGroup) {
        this.SequenceGroup = SequenceGroup;
    }

    // SequenceNumber
    private Integer SequenceNumber;

    @JsonProperty("SequenceNumber")
    public Integer getSequenceNumber() {
        return this.SequenceNumber;
    }

    @JsonProperty("SequenceNumber")
    public void setSequenceNumber(Integer SequenceNumber) {
        this.SequenceNumber = SequenceNumber;
    }

    // GroupLeaderId
    private String GroupLeaderId;

    @JsonProperty("GroupLeaderId")
    public String getGroupLeaderId() {
        return this.GroupLeaderId;
    }

    @JsonProperty("GroupLeaderId")
    public void setGroupLeaderId(String GroupLeaderId) {
        this.GroupLeaderId = GroupLeaderId;
    }

    // StartedAt
    private java.time.ZonedDateTime StartedAt;

    @JsonProperty("StartedAt")
    public java.time.ZonedDateTime getStartedAt() {
        return this.StartedAt;
    }

    @JsonProperty("StartedAt")
    public void setStartedAt(java.time.ZonedDateTime StartedAt) {
        this.StartedAt = StartedAt;
    }

    // FinishedAt
    private java.time.ZonedDateTime FinishedAt;

    @JsonProperty("FinishedAt")
    public java.time.ZonedDateTime getFinishedAt() {
        return this.FinishedAt;
    }

    @JsonProperty("FinishedAt")
    public void setFinishedAt(java.time.ZonedDateTime FinishedAt) {
        this.FinishedAt = FinishedAt;
    }

    // WorkerUri
    private String WorkerUri;

    @JsonProperty("WorkerUri")
    public String getWorkerUri() {
        return this.WorkerUri;
    }

    @JsonProperty("WorkerUri")
    public void setWorkerUri(String WorkerUri) {
        this.WorkerUri = WorkerUri;
    }

    // Timeout
    private Integer Timeout;

    @JsonProperty("Timeout")
    public Integer getTimeout() {
        return this.Timeout;
    }

    @JsonProperty("Timeout")
    public void setTimeout(Integer Timeout) {
        this.Timeout = Timeout;
    }

    // ExpiresAt
    private java.time.ZonedDateTime ExpiresAt;

    @JsonProperty("ExpiresAt")
    public java.time.ZonedDateTime getExpiresAt() {
        return this.ExpiresAt;
    }

    @JsonProperty("ExpiresAt")
    public void setExpiresAt(java.time.ZonedDateTime ExpiresAt) {
        this.ExpiresAt = ExpiresAt;
    }

    // NumFollowers
    private Integer NumFollowers;

    @JsonProperty("NumFollowers")
    public Integer getNumFollowers() {
        return this.NumFollowers;
    }

    @JsonProperty("NumFollowers")
    public void setNumFollowers(Integer NumFollowers) {
        this.NumFollowers = NumFollowers;
    }

    // ProcessAfter
    private java.time.ZonedDateTime ProcessAfter;

    @JsonProperty("ProcessAfter")
    public java.time.ZonedDateTime getProcessAfter() {
        return this.ProcessAfter;
    }

    @JsonProperty("ProcessAfter")
    public void setProcessAfter(java.time.ZonedDateTime ProcessAfter) {
        this.ProcessAfter = ProcessAfter;
    }

    // ParentKey
    private String ParentKey;

    @JsonProperty("ParentKey")
    public String getParentKey() {
        return this.ParentKey;
    }

    @JsonProperty("ParentKey")
    public void setParentKey(String ParentKey) {
        this.ParentKey = ParentKey;
    }

    // RetryLimit
    private Integer RetryLimit;

    @JsonProperty("RetryLimit")
    public Integer getRetryLimit() {
        return this.RetryLimit;
    }

    @JsonProperty("RetryLimit")
    public void setRetryLimit(Integer RetryLimit) {
        this.RetryLimit = RetryLimit;
    }

    // RetryCount
    private Integer RetryCount;

    @JsonProperty("RetryCount")
    public Integer getRetryCount() {
        return this.RetryCount;
    }

    @JsonProperty("RetryCount")
    public void setRetryCount(Integer RetryCount) {
        this.RetryCount = RetryCount;
    }

    // RetryBackoff
    private Integer RetryBackoff;

    @JsonProperty("RetryBackoff")
    public Integer getRetryBackoff() {
        return this.RetryBackoff;
    }

    @JsonProperty("RetryBackoff")
    public void setRetryBackoff(Integer RetryBackoff) {
        this.RetryBackoff = RetryBackoff;
    }

    // Error
    private String Error;

    @JsonProperty("Error")
    public String getError() {
        return this.Error;
    }

    @JsonProperty("Error")
    public void setError(String Error) {
        this.Error = Error;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Background Operation ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("Name", "Background Operation Name", "string", "xsd:string", 255, false, false, true, false, false, false, true);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("SubmittedAt", "Submitted", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("Status", "Status", "picklist", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("ExecutionGroup", "Execution Group", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("SequenceGroup", "Sequence Group", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("SequenceNumber", "Sequence Number", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("GroupLeaderId", "Background Operation ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("StartedAt", "Started", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("FinishedAt", "Finished", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("WorkerUri", "Worker URI", "string", "xsd:string", 255, false, true, false, false, false, false, true);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("Timeout", "Timeout", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("ExpiresAt", "ExpiresAt", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("NumFollowers", "NumFollowers", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField20);
        final SObjectField sObjectField21 = createField("ProcessAfter", "ProcessAfter", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField21);
        final SObjectField sObjectField22 = createField("ParentKey", "ParentKey", "string", "xsd:string", 255, false, true, false, false, false, false, true);
        fields1.add(sObjectField22);
        final SObjectField sObjectField23 = createField("RetryLimit", "RetryLimit", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField23);
        final SObjectField sObjectField24 = createField("RetryCount", "RetryCount", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField24);
        final SObjectField sObjectField25 = createField("RetryBackoff", "RetryBackoff", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField25);
        final SObjectField sObjectField26 = createField("Error", "Error", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField26);

        description.setLabelPlural("Background Operations");
        description.setLabel("Background Operation");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/BackgroundOperation/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/BackgroundOperation");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/BackgroundOperation/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("BackgroundOperation");

        return description;
    }
}
