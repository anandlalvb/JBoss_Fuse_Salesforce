/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject ListViewChart
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("ListViewChart")
public class ListViewChart extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // SobjectType
    @XStreamConverter(PicklistEnumConverter.class)
    private ListViewChart_SobjectTypeEnum SobjectType;

    @JsonProperty("SobjectType")
    public ListViewChart_SobjectTypeEnum getSobjectType() {
        return this.SobjectType;
    }

    @JsonProperty("SobjectType")
    public void setSobjectType(ListViewChart_SobjectTypeEnum SobjectType) {
        this.SobjectType = SobjectType;
    }

    // DeveloperName
    private String DeveloperName;

    @JsonProperty("DeveloperName")
    public String getDeveloperName() {
        return this.DeveloperName;
    }

    @JsonProperty("DeveloperName")
    public void setDeveloperName(String DeveloperName) {
        this.DeveloperName = DeveloperName;
    }

    // Language
    @XStreamConverter(PicklistEnumConverter.class)
    private ListViewChart_LanguageEnum Language;

    @JsonProperty("Language")
    public ListViewChart_LanguageEnum getLanguage() {
        return this.Language;
    }

    @JsonProperty("Language")
    public void setLanguage(ListViewChart_LanguageEnum Language) {
        this.Language = Language;
    }

    // MasterLabel
    private String MasterLabel;

    @JsonProperty("MasterLabel")
    public String getMasterLabel() {
        return this.MasterLabel;
    }

    @JsonProperty("MasterLabel")
    public void setMasterLabel(String MasterLabel) {
        this.MasterLabel = MasterLabel;
    }

    // ChartType
    @XStreamConverter(PicklistEnumConverter.class)
    private ListViewChart_ChartTypeEnum ChartType;

    @JsonProperty("ChartType")
    public ListViewChart_ChartTypeEnum getChartType() {
        return this.ChartType;
    }

    @JsonProperty("ChartType")
    public void setChartType(ListViewChart_ChartTypeEnum ChartType) {
        this.ChartType = ChartType;
    }

    // GroupingField
    @XStreamConverter(PicklistEnumConverter.class)
    private ListViewChart_GroupingFieldEnum GroupingField;

    @JsonProperty("GroupingField")
    public ListViewChart_GroupingFieldEnum getGroupingField() {
        return this.GroupingField;
    }

    @JsonProperty("GroupingField")
    public void setGroupingField(ListViewChart_GroupingFieldEnum GroupingField) {
        this.GroupingField = GroupingField;
    }

    // AggregateField
    @XStreamConverter(PicklistEnumConverter.class)
    private ListViewChart_AggregateFieldEnum AggregateField;

    @JsonProperty("AggregateField")
    public ListViewChart_AggregateFieldEnum getAggregateField() {
        return this.AggregateField;
    }

    @JsonProperty("AggregateField")
    public void setAggregateField(ListViewChart_AggregateFieldEnum AggregateField) {
        this.AggregateField = AggregateField;
    }

    // AggregateType
    @XStreamConverter(PicklistEnumConverter.class)
    private ListViewChart_AggregateTypeEnum AggregateType;

    @JsonProperty("AggregateType")
    public ListViewChart_AggregateTypeEnum getAggregateType() {
        return this.AggregateType;
    }

    @JsonProperty("AggregateType")
    public void setAggregateType(ListViewChart_AggregateTypeEnum AggregateType) {
        this.AggregateType = AggregateType;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "List View Chart ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("SobjectType", "Custom Object Definition ID", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("DeveloperName", "API Name", "string", "xsd:string", 80, false, false, true, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("Language", "Master Language", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("MasterLabel", "Label", "string", "xsd:string", 80, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("OwnerId", "User ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("ChartType", "Chart Type", "picklist", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("GroupingField", "Custom Field Definition ID", "picklist", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("AggregateField", "Custom Field Definition ID", "picklist", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("AggregateType", "Aggregate Type", "picklist", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField16);

        description.setLabelPlural("List View Charts");
        description.setLabel("List View Chart");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/ListViewChart/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/ListViewChart");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/ListViewChart/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("ListViewChart");

        return description;
    }
}
