/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import javax.annotation.Generated;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Salesforce Enumeration DTO for picklist SobjectType
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
public enum ObjectPermissions_SobjectTypeEnum {

    // Account
    ACCOUNT("Account"),
    // AccountBrand
    ACCOUNTBRAND("AccountBrand"),
    // ActionPlan
    ACTIONPLAN("ActionPlan"),
    // ActionPlanTemplate
    ACTIONPLANTEMPLATE("ActionPlanTemplate"),
    // ActiveScratchOrg
    ACTIVESCRATCHORG("ActiveScratchOrg"),
    // AddOnDefinition
    ADDONDEFINITION("AddOnDefinition"),
    // Address
    ADDRESS("Address"),
    // AggregationRow
    AGGREGATIONROW("AggregationRow"),
    // Asset
    ASSET("Asset"),
    // Campaign
    CAMPAIGN("Campaign"),
    // CarePreauth
    CAREPREAUTH("CarePreauth"),
    // CarePreauthItem
    CAREPREAUTHITEM("CarePreauthItem"),
    // Case
    CASE("Case"),
    // Certification
    CERTIFICATION("Certification"),
    // CertificationDef
    CERTIFICATIONDEF("CertificationDef"),
    // CertificationSectionDef
    CERTIFICATIONSECTIONDEF("CertificationSectionDef"),
    // CertificationStep
    CERTIFICATIONSTEP("CertificationStep"),
    // CertificationStepDef
    CERTIFICATIONSTEPDEF("CertificationStepDef"),
    // ChannelProgram
    CHANNELPROGRAM("ChannelProgram"),
    // ChannelProgramLevel
    CHANNELPROGRAMLEVEL("ChannelProgramLevel"),
    // ChannelProgramMember
    CHANNELPROGRAMMEMBER("ChannelProgramMember"),
    // CloudServiceProvider
    CLOUDSERVICEPROVIDER("CloudServiceProvider"),
    // CloudServiceProviderApi
    CLOUDSERVICEPROVIDERAPI("CloudServiceProviderApi"),
    // Contact
    CONTACT("Contact"),
    // ContactPhone
    CONTACTPHONE("ContactPhone"),
    // ContactRequest
    CONTACTREQUEST("ContactRequest"),
    // Contract
    CONTRACT("Contract"),
    // ContractLineItem
    CONTRACTLINEITEM("ContractLineItem"),
    // CoverageBenefit
    COVERAGEBENEFIT("CoverageBenefit"),
    // CoverageBenefitItem
    COVERAGEBENEFITITEM("CoverageBenefitItem"),
    // DandBCompany
    DANDBCOMPANY("DandBCompany"),
    // DataSharingCustomerLocal
    DATASHARINGCUSTOMERLOCAL("DataSharingCustomerLocal"),
    // Document
    DOCUMENT("Document"),
    // DuplicateRecordSet
    DUPLICATERECORDSET("DuplicateRecordSet"),
    // EditionDefinition
    EDITIONDEFINITION("EditionDefinition"),
    // Employee
    EMPLOYEE("Employee"),
    // EngagementProgram
    ENGAGEMENTPROGRAM("EngagementProgram"),
    // EngagementProgramNode
    ENGAGEMENTPROGRAMNODE("EngagementProgramNode"),
    // EngagementProgramVersion
    ENGAGEMENTPROGRAMVERSION("EngagementProgramVersion"),
    // Entitlement
    ENTITLEMENT("Entitlement"),
    // EntitlementContact
    ENTITLEMENTCONTACT("EntitlementContact"),
    // EnvironmentHubInvitation
    ENVIRONMENTHUBINVITATION("EnvironmentHubInvitation"),
    // EnvironmentHubMember
    ENVIRONMENTHUBMEMBER("EnvironmentHubMember"),
    // FtestAccountChild
    FTESTACCOUNTCHILD("FtestAccountChild"),
    // FtestChild
    FTESTCHILD("FtestChild"),
    // FtestError
    FTESTERROR("FtestError"),
    // FtestErrorChild
    FTESTERRORCHILD("FtestErrorChild"),
    // FtestGrandChild
    FTESTGRANDCHILD("FtestGrandChild"),
    // FtestHiddenName
    FTESTHIDDENNAME("FtestHiddenName"),
    // FtestMain
    FTESTMAIN("FtestMain"),
    // FtestOffCoreRecord
    FTESTOFFCORERECORD("FtestOffCoreRecord"),
    // FtestPerson
    FTESTPERSON("FtestPerson"),
    // FtestVirtualMain
    FTESTVIRTUALMAIN("FtestVirtualMain"),
    // Goal
    GOAL("Goal"),
    // GoalLink
    GOALLINK("GoalLink"),
    // Idea
    IDEA("Idea"),
    // IdeaTheme
    IDEATHEME("IdeaTheme"),
    // IdentityDocument
    IDENTITYDOCUMENT("IdentityDocument"),
    // IncludedLicenseDefinition
    INCLUDEDLICENSEDEFINITION("IncludedLicenseDefinition"),
    // Individual
    INDIVIDUAL("Individual"),
    // Lead
    LEAD("Lead"),
    // LicensingError
    LICENSINGERROR("LicensingError"),
    // LicensingRequest
    LICENSINGREQUEST("LicensingRequest"),
    // LiveAgentSession
    LIVEAGENTSESSION("LiveAgentSession"),
    // LiveChatTranscript
    LIVECHATTRANSCRIPT("LiveChatTranscript"),
    // LiveChatVisitor
    LIVECHATVISITOR("LiveChatVisitor"),
    // Location
    LOCATION("Location"),
    // Macro
    MACRO("Macro"),
    // MaintenancePlan
    MAINTENANCEPLAN("MaintenancePlan"),
    // ManagementAddOnLicense
    MANAGEMENTADDONLICENSE("ManagementAddOnLicense"),
    // ManagementEditionLicense
    MANAGEMENTEDITIONLICENSE("ManagementEditionLicense"),
    // ManagementPlatformLicense
    MANAGEMENTPLATFORMLICENSE("ManagementPlatformLicense"),
    // ManagementUserLicense
    MANAGEMENTUSERLICENSE("ManagementUserLicense"),
    // MemberPlan
    MEMBERPLAN("MemberPlan"),
    // MessagingEndUser
    MESSAGINGENDUSER("MessagingEndUser"),
    // MessagingSession
    MESSAGINGSESSION("MessagingSession"),
    // Metric
    METRIC("Metric"),
    // MetricDataLink
    METRICDATALINK("MetricDataLink"),
    // MyCustomObject
    MYCUSTOMOBJECT("MyCustomObject"),
    // NamespaceRegistry
    NAMESPACEREGISTRY("NamespaceRegistry"),
    // OperatingHours
    OPERATINGHOURS("OperatingHours"),
    // Opportunity
    OPPORTUNITY("Opportunity"),
    // Order
    ORDER("Order"),
    // PartnerFundAllocation
    PARTNERFUNDALLOCATION("PartnerFundAllocation"),
    // PartnerFundClaim
    PARTNERFUNDCLAIM("PartnerFundClaim"),
    // PartnerFundRequest
    PARTNERFUNDREQUEST("PartnerFundRequest"),
    // PartnerMarketingBudget
    PARTNERMARKETINGBUDGET("PartnerMarketingBudget"),
    // PaymentInstrument
    PAYMENTINSTRUMENT("PaymentInstrument"),
    // PersonEducation
    PERSONEDUCATION("PersonEducation"),
    // PersonEmployment
    PERSONEMPLOYMENT("PersonEmployment"),
    // PersonList
    PERSONLIST("PersonList"),
    // PlanBenefit
    PLANBENEFIT("PlanBenefit"),
    // PlanBenefitItem
    PLANBENEFITITEM("PlanBenefitItem"),
    // PlatformLicenseDefinition
    PLATFORMLICENSEDEFINITION("PlatformLicenseDefinition"),
    // Pricebook2
    PRICEBOOK2("Pricebook2"),
    // Product2
    PRODUCT2("Product2"),
    // ProductItem
    PRODUCTITEM("ProductItem"),
    // ProductRequest
    PRODUCTREQUEST("ProductRequest"),
    // ProductTransfer
    PRODUCTTRANSFER("ProductTransfer"),
    // ProfileSkill
    PROFILESKILL("ProfileSkill"),
    // ProfileSkillEndorsement
    PROFILESKILLENDORSEMENT("ProfileSkillEndorsement"),
    // ProfileSkillUser
    PROFILESKILLUSER("ProfileSkillUser"),
    // PurchaserPlan
    PURCHASERPLAN("PurchaserPlan"),
    // PurchaserPlanAssn
    PURCHASERPLANASSN("PurchaserPlanAssn"),
    // PushTopic
    PUSHTOPIC("PushTopic"),
    // Question
    QUESTION("Question"),
    // QuickText
    QUICKTEXT("QuickText"),
    // Quote
    QUOTE("Quote"),
    // RegisteredMobileDevice
    REGISTEREDMOBILEDEVICE("RegisteredMobileDevice"),
    // ReturnOrder
    RETURNORDER("ReturnOrder"),
    // SOSSession
    SOSSESSION("SOSSession"),
    // Scorecard
    SCORECARD("Scorecard"),
    // ScorecardAssociation
    SCORECARDASSOCIATION("ScorecardAssociation"),
    // ScorecardMetric
    SCORECARDMETRIC("ScorecardMetric"),
    // ScratchOrgInfo
    SCRATCHORGINFO("ScratchOrgInfo"),
    // ServiceAppointment
    SERVICEAPPOINTMENT("ServiceAppointment"),
    // ServiceContract
    SERVICECONTRACT("ServiceContract"),
    // ServiceCrew
    SERVICECREW("ServiceCrew"),
    // ServiceResource
    SERVICERESOURCE("ServiceResource"),
    // ServiceTerritory
    SERVICETERRITORY("ServiceTerritory"),
    // SettingUsageDefinition
    SETTINGUSAGEDEFINITION("SettingUsageDefinition"),
    // ShapeRepresentation
    SHAPEREPRESENTATION("ShapeRepresentation"),
    // Shipment
    SHIPMENT("Shipment"),
    // SignupRequest
    SIGNUPREQUEST("SignupRequest"),
    // SocialPost
    SOCIALPOST("SocialPost"),
    // Solution
    SOLUTION("Solution"),
    // StreamingChannel
    STREAMINGCHANNEL("StreamingChannel"),
    // Survey
    SURVEY("Survey"),
    // SurveyInvitation
    SURVEYINVITATION("SurveyInvitation"),
    // SurveyResponse
    SURVEYRESPONSE("SurveyResponse"),
    // Tenant
    TENANT("Tenant"),
    // TenantParameterMap
    TENANTPARAMETERMAP("TenantParameterMap"),
    // TimeSheet
    TIMESHEET("TimeSheet"),
    // UsageEntitlement
    USAGEENTITLEMENT("UsageEntitlement"),
    // UsageFactor
    USAGEFACTOR("UsageFactor"),
    // UserLicenseDefinition
    USERLICENSEDEFINITION("UserLicenseDefinition"),
    // WorkCoaching
    WORKCOACHING("WorkCoaching"),
    // WorkFeedback
    WORKFEEDBACK("WorkFeedback"),
    // WorkFeedbackQuestion
    WORKFEEDBACKQUESTION("WorkFeedbackQuestion"),
    // WorkFeedbackQuestionSet
    WORKFEEDBACKQUESTIONSET("WorkFeedbackQuestionSet"),
    // WorkFeedbackRequest
    WORKFEEDBACKREQUEST("WorkFeedbackRequest"),
    // WorkFeedbackTemplate
    WORKFEEDBACKTEMPLATE("WorkFeedbackTemplate"),
    // WorkGoal
    WORKGOAL("WorkGoal"),
    // WorkGoalCollaborator
    WORKGOALCOLLABORATOR("WorkGoalCollaborator"),
    // WorkGoalLink
    WORKGOALLINK("WorkGoalLink"),
    // WorkOrder
    WORKORDER("WorkOrder"),
    // WorkPerformanceCycle
    WORKPERFORMANCECYCLE("WorkPerformanceCycle"),
    // WorkReward
    WORKREWARD("WorkReward"),
    // WorkRewardFund
    WORKREWARDFUND("WorkRewardFund"),
    // WorkRewardFundType
    WORKREWARDFUNDTYPE("WorkRewardFundType"),
    // WorkType
    WORKTYPE("WorkType"),
    // WorkUpgradeAction
    WORKUPGRADEACTION("WorkUpgradeAction"),
    // WorkUpgradeCustomer
    WORKUPGRADECUSTOMER("WorkUpgradeCustomer"),
    // WorkUpgradeUser
    WORKUPGRADEUSER("WorkUpgradeUser");

    final String value;

    private ObjectPermissions_SobjectTypeEnum(String value) {
        this.value = value;
    }

    @JsonValue
    public String value() {
        return this.value;
    }

    @JsonCreator
    public static ObjectPermissions_SobjectTypeEnum fromValue(String value) {
        for (ObjectPermissions_SobjectTypeEnum e : ObjectPermissions_SobjectTypeEnum.values()) {
            if (e.value.equals(value)) {
                return e;
            }
        }
        throw new IllegalArgumentException(value);
    }

}
