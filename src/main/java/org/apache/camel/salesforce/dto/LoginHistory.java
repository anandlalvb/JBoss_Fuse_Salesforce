/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject LoginHistory
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("LoginHistory")
public class LoginHistory extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // UserId
    private String UserId;

    @JsonProperty("UserId")
    public String getUserId() {
        return this.UserId;
    }

    @JsonProperty("UserId")
    public void setUserId(String UserId) {
        this.UserId = UserId;
    }

    // LoginTime
    private java.time.ZonedDateTime LoginTime;

    @JsonProperty("LoginTime")
    public java.time.ZonedDateTime getLoginTime() {
        return this.LoginTime;
    }

    @JsonProperty("LoginTime")
    public void setLoginTime(java.time.ZonedDateTime LoginTime) {
        this.LoginTime = LoginTime;
    }

    // LoginType
    @XStreamConverter(PicklistEnumConverter.class)
    private LoginHistory_LoginTypeEnum LoginType;

    @JsonProperty("LoginType")
    public LoginHistory_LoginTypeEnum getLoginType() {
        return this.LoginType;
    }

    @JsonProperty("LoginType")
    public void setLoginType(LoginHistory_LoginTypeEnum LoginType) {
        this.LoginType = LoginType;
    }

    // SourceIp
    private String SourceIp;

    @JsonProperty("SourceIp")
    public String getSourceIp() {
        return this.SourceIp;
    }

    @JsonProperty("SourceIp")
    public void setSourceIp(String SourceIp) {
        this.SourceIp = SourceIp;
    }

    // LoginUrl
    private String LoginUrl;

    @JsonProperty("LoginUrl")
    public String getLoginUrl() {
        return this.LoginUrl;
    }

    @JsonProperty("LoginUrl")
    public void setLoginUrl(String LoginUrl) {
        this.LoginUrl = LoginUrl;
    }

    // AuthenticationServiceId
    private String AuthenticationServiceId;

    @JsonProperty("AuthenticationServiceId")
    public String getAuthenticationServiceId() {
        return this.AuthenticationServiceId;
    }

    @JsonProperty("AuthenticationServiceId")
    public void setAuthenticationServiceId(String AuthenticationServiceId) {
        this.AuthenticationServiceId = AuthenticationServiceId;
    }

    // LoginGeoId
    private String LoginGeoId;

    @JsonProperty("LoginGeoId")
    public String getLoginGeoId() {
        return this.LoginGeoId;
    }

    @JsonProperty("LoginGeoId")
    public void setLoginGeoId(String LoginGeoId) {
        this.LoginGeoId = LoginGeoId;
    }

    // Browser
    private String Browser;

    @JsonProperty("Browser")
    public String getBrowser() {
        return this.Browser;
    }

    @JsonProperty("Browser")
    public void setBrowser(String Browser) {
        this.Browser = Browser;
    }

    // Platform
    private String Platform;

    @JsonProperty("Platform")
    public String getPlatform() {
        return this.Platform;
    }

    @JsonProperty("Platform")
    public void setPlatform(String Platform) {
        this.Platform = Platform;
    }

    // Status
    private String Status;

    @JsonProperty("Status")
    public String getStatus() {
        return this.Status;
    }

    @JsonProperty("Status")
    public void setStatus(String Status) {
        this.Status = Status;
    }

    // Application
    private String Application;

    @JsonProperty("Application")
    public String getApplication() {
        return this.Application;
    }

    @JsonProperty("Application")
    public void setApplication(String Application) {
        this.Application = Application;
    }

    // ClientVersion
    private String ClientVersion;

    @JsonProperty("ClientVersion")
    public String getClientVersion() {
        return this.ClientVersion;
    }

    @JsonProperty("ClientVersion")
    public void setClientVersion(String ClientVersion) {
        this.ClientVersion = ClientVersion;
    }

    // ApiType
    private String ApiType;

    @JsonProperty("ApiType")
    public String getApiType() {
        return this.ApiType;
    }

    @JsonProperty("ApiType")
    public void setApiType(String ApiType) {
        this.ApiType = ApiType;
    }

    // ApiVersion
    private String ApiVersion;

    @JsonProperty("ApiVersion")
    public String getApiVersion() {
        return this.ApiVersion;
    }

    @JsonProperty("ApiVersion")
    public void setApiVersion(String ApiVersion) {
        this.ApiVersion = ApiVersion;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Login History Id", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("UserId", "User ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("LoginTime", "Login Time", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("LoginType", "Login Type", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("SourceIp", "Source IP", "string", "xsd:string", 39, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("LoginUrl", "Login URL", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("AuthenticationServiceId", "Authentication Service ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("LoginGeoId", "Login Geo Data ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("Browser", "Browser", "string", "xsd:string", 64, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("Platform", "Platform", "string", "xsd:string", 64, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("Status", "Status", "string", "xsd:string", 128, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("Application", "Application", "string", "xsd:string", 64, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("ClientVersion", "Client Version", "string", "xsd:string", 64, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("ApiType", "API Type", "string", "xsd:string", 64, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("ApiVersion", "API Version", "string", "xsd:string", 32, false, true, false, false, false, false, false);
        fields1.add(sObjectField15);

        description.setLabelPlural("Login History");
        description.setLabel("Login History");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/LoginHistory/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/LoginHistory");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/LoginHistory/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("LoginHistory");

        return description;
    }
}
