/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject Site
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("Site")
public class Site extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // Subdomain
    private String Subdomain;

    @JsonProperty("Subdomain")
    public String getSubdomain() {
        return this.Subdomain;
    }

    @JsonProperty("Subdomain")
    public void setSubdomain(String Subdomain) {
        this.Subdomain = Subdomain;
    }

    // UrlPathPrefix
    private String UrlPathPrefix;

    @JsonProperty("UrlPathPrefix")
    public String getUrlPathPrefix() {
        return this.UrlPathPrefix;
    }

    @JsonProperty("UrlPathPrefix")
    public void setUrlPathPrefix(String UrlPathPrefix) {
        this.UrlPathPrefix = UrlPathPrefix;
    }

    // GuestUserId
    private String GuestUserId;

    @JsonProperty("GuestUserId")
    public String getGuestUserId() {
        return this.GuestUserId;
    }

    @JsonProperty("GuestUserId")
    public void setGuestUserId(String GuestUserId) {
        this.GuestUserId = GuestUserId;
    }

    // Status
    @XStreamConverter(PicklistEnumConverter.class)
    private Site_StatusEnum Status;

    @JsonProperty("Status")
    public Site_StatusEnum getStatus() {
        return this.Status;
    }

    @JsonProperty("Status")
    public void setStatus(Site_StatusEnum Status) {
        this.Status = Status;
    }

    // AdminId
    private String AdminId;

    @JsonProperty("AdminId")
    public String getAdminId() {
        return this.AdminId;
    }

    @JsonProperty("AdminId")
    public void setAdminId(String AdminId) {
        this.AdminId = AdminId;
    }

    // OptionsEnableFeeds
    private Boolean OptionsEnableFeeds;

    @JsonProperty("OptionsEnableFeeds")
    public Boolean getOptionsEnableFeeds() {
        return this.OptionsEnableFeeds;
    }

    @JsonProperty("OptionsEnableFeeds")
    public void setOptionsEnableFeeds(Boolean OptionsEnableFeeds) {
        this.OptionsEnableFeeds = OptionsEnableFeeds;
    }

    // OptionsRequireHttps
    private Boolean OptionsRequireHttps;

    @JsonProperty("OptionsRequireHttps")
    public Boolean getOptionsRequireHttps() {
        return this.OptionsRequireHttps;
    }

    @JsonProperty("OptionsRequireHttps")
    public void setOptionsRequireHttps(Boolean OptionsRequireHttps) {
        this.OptionsRequireHttps = OptionsRequireHttps;
    }

    // OptionsAllowHomePage
    private Boolean OptionsAllowHomePage;

    @JsonProperty("OptionsAllowHomePage")
    public Boolean getOptionsAllowHomePage() {
        return this.OptionsAllowHomePage;
    }

    @JsonProperty("OptionsAllowHomePage")
    public void setOptionsAllowHomePage(Boolean OptionsAllowHomePage) {
        this.OptionsAllowHomePage = OptionsAllowHomePage;
    }

    // OptionsAllowStandardIdeasPages
    private Boolean OptionsAllowStandardIdeasPages;

    @JsonProperty("OptionsAllowStandardIdeasPages")
    public Boolean getOptionsAllowStandardIdeasPages() {
        return this.OptionsAllowStandardIdeasPages;
    }

    @JsonProperty("OptionsAllowStandardIdeasPages")
    public void setOptionsAllowStandardIdeasPages(Boolean OptionsAllowStandardIdeasPages) {
        this.OptionsAllowStandardIdeasPages = OptionsAllowStandardIdeasPages;
    }

    // OptionsAllowStandardSearch
    private Boolean OptionsAllowStandardSearch;

    @JsonProperty("OptionsAllowStandardSearch")
    public Boolean getOptionsAllowStandardSearch() {
        return this.OptionsAllowStandardSearch;
    }

    @JsonProperty("OptionsAllowStandardSearch")
    public void setOptionsAllowStandardSearch(Boolean OptionsAllowStandardSearch) {
        this.OptionsAllowStandardSearch = OptionsAllowStandardSearch;
    }

    // OptionsAllowStandardLookups
    private Boolean OptionsAllowStandardLookups;

    @JsonProperty("OptionsAllowStandardLookups")
    public Boolean getOptionsAllowStandardLookups() {
        return this.OptionsAllowStandardLookups;
    }

    @JsonProperty("OptionsAllowStandardLookups")
    public void setOptionsAllowStandardLookups(Boolean OptionsAllowStandardLookups) {
        this.OptionsAllowStandardLookups = OptionsAllowStandardLookups;
    }

    // OptionsAllowStandardAnswersPages
    private Boolean OptionsAllowStandardAnswersPages;

    @JsonProperty("OptionsAllowStandardAnswersPages")
    public Boolean getOptionsAllowStandardAnswersPages() {
        return this.OptionsAllowStandardAnswersPages;
    }

    @JsonProperty("OptionsAllowStandardAnswersPages")
    public void setOptionsAllowStandardAnswersPages(Boolean OptionsAllowStandardAnswersPages) {
        this.OptionsAllowStandardAnswersPages = OptionsAllowStandardAnswersPages;
    }

    // OptionsAllowGuestSupportApi
    private Boolean OptionsAllowGuestSupportApi;

    @JsonProperty("OptionsAllowGuestSupportApi")
    public Boolean getOptionsAllowGuestSupportApi() {
        return this.OptionsAllowGuestSupportApi;
    }

    @JsonProperty("OptionsAllowGuestSupportApi")
    public void setOptionsAllowGuestSupportApi(Boolean OptionsAllowGuestSupportApi) {
        this.OptionsAllowGuestSupportApi = OptionsAllowGuestSupportApi;
    }

    // Description
    private String Description;

    @JsonProperty("Description")
    public String getDescription() {
        return this.Description;
    }

    @JsonProperty("Description")
    public void setDescription(String Description) {
        this.Description = Description;
    }

    // MasterLabel
    private String MasterLabel;

    @JsonProperty("MasterLabel")
    public String getMasterLabel() {
        return this.MasterLabel;
    }

    @JsonProperty("MasterLabel")
    public void setMasterLabel(String MasterLabel) {
        this.MasterLabel = MasterLabel;
    }

    // AnalyticsTrackingCode
    private String AnalyticsTrackingCode;

    @JsonProperty("AnalyticsTrackingCode")
    public String getAnalyticsTrackingCode() {
        return this.AnalyticsTrackingCode;
    }

    @JsonProperty("AnalyticsTrackingCode")
    public void setAnalyticsTrackingCode(String AnalyticsTrackingCode) {
        this.AnalyticsTrackingCode = AnalyticsTrackingCode;
    }

    // SiteType
    @XStreamConverter(PicklistEnumConverter.class)
    private Site_SiteTypeEnum SiteType;

    @JsonProperty("SiteType")
    public Site_SiteTypeEnum getSiteType() {
        return this.SiteType;
    }

    @JsonProperty("SiteType")
    public void setSiteType(Site_SiteTypeEnum SiteType) {
        this.SiteType = SiteType;
    }

    // ClickjackProtectionLevel
    @XStreamConverter(PicklistEnumConverter.class)
    private Site_ClickjackProtectionLevelEnum ClickjackProtectionLevel;

    @JsonProperty("ClickjackProtectionLevel")
    public Site_ClickjackProtectionLevelEnum getClickjackProtectionLevel() {
        return this.ClickjackProtectionLevel;
    }

    @JsonProperty("ClickjackProtectionLevel")
    public void setClickjackProtectionLevel(Site_ClickjackProtectionLevelEnum ClickjackProtectionLevel) {
        this.ClickjackProtectionLevel = ClickjackProtectionLevel;
    }

    // DailyBandwidthLimit
    private Integer DailyBandwidthLimit;

    @JsonProperty("DailyBandwidthLimit")
    public Integer getDailyBandwidthLimit() {
        return this.DailyBandwidthLimit;
    }

    @JsonProperty("DailyBandwidthLimit")
    public void setDailyBandwidthLimit(Integer DailyBandwidthLimit) {
        this.DailyBandwidthLimit = DailyBandwidthLimit;
    }

    // DailyBandwidthUsed
    private Integer DailyBandwidthUsed;

    @JsonProperty("DailyBandwidthUsed")
    public Integer getDailyBandwidthUsed() {
        return this.DailyBandwidthUsed;
    }

    @JsonProperty("DailyBandwidthUsed")
    public void setDailyBandwidthUsed(Integer DailyBandwidthUsed) {
        this.DailyBandwidthUsed = DailyBandwidthUsed;
    }

    // DailyRequestTimeLimit
    private Integer DailyRequestTimeLimit;

    @JsonProperty("DailyRequestTimeLimit")
    public Integer getDailyRequestTimeLimit() {
        return this.DailyRequestTimeLimit;
    }

    @JsonProperty("DailyRequestTimeLimit")
    public void setDailyRequestTimeLimit(Integer DailyRequestTimeLimit) {
        this.DailyRequestTimeLimit = DailyRequestTimeLimit;
    }

    // DailyRequestTimeUsed
    private Integer DailyRequestTimeUsed;

    @JsonProperty("DailyRequestTimeUsed")
    public Integer getDailyRequestTimeUsed() {
        return this.DailyRequestTimeUsed;
    }

    @JsonProperty("DailyRequestTimeUsed")
    public void setDailyRequestTimeUsed(Integer DailyRequestTimeUsed) {
        this.DailyRequestTimeUsed = DailyRequestTimeUsed;
    }

    // MonthlyPageViewsEntitlement
    private Integer MonthlyPageViewsEntitlement;

    @JsonProperty("MonthlyPageViewsEntitlement")
    public Integer getMonthlyPageViewsEntitlement() {
        return this.MonthlyPageViewsEntitlement;
    }

    @JsonProperty("MonthlyPageViewsEntitlement")
    public void setMonthlyPageViewsEntitlement(Integer MonthlyPageViewsEntitlement) {
        this.MonthlyPageViewsEntitlement = MonthlyPageViewsEntitlement;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Site ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("Name", "Site Name", "string", "xsd:string", 80, false, false, true, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("Subdomain", "Site Subdomain Prefix", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("UrlPathPrefix", "Default Web Address", "string", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("GuestUserId", "User ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("Status", "Site Status", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("AdminId", "User ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("OptionsEnableFeeds", "Enable Feeds", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("OptionsRequireHttps", "Require Secure Connections (HTTPS)", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("OptionsAllowHomePage", "Enable Standard Home Page", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("OptionsAllowStandardIdeasPages", "Enable Standard Ideas Pages", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("OptionsAllowStandardSearch", "Enable Standard Lookup Pages", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("OptionsAllowStandardLookups", "Enable Standard Search Pages", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("OptionsAllowStandardAnswersPages", "Enable Standard Answers Pages", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("OptionsAllowGuestSupportApi", "Guest Access to the Support API", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("Description", "Site Description", "textarea", "xsd:string", 1000, false, true, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("MasterLabel", "Site Label", "string", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("AnalyticsTrackingCode", "Analytics Tracking Code", "string", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("SiteType", "Site Type", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("ClickjackProtectionLevel", "Clickjack Protection Level", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField20);
        final SObjectField sObjectField21 = createField("DailyBandwidthLimit", "Daily Bandwidth Limit (MB)", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField21);
        final SObjectField sObjectField22 = createField("DailyBandwidthUsed", "Daily Bandwidth Used", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField22);
        final SObjectField sObjectField23 = createField("DailyRequestTimeLimit", "Daily Request Time Limit (min)", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField23);
        final SObjectField sObjectField24 = createField("DailyRequestTimeUsed", "Daily Request Time Used", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField24);
        final SObjectField sObjectField25 = createField("MonthlyPageViewsEntitlement", "Monthly Page Views Allowed", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField25);
        final SObjectField sObjectField26 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField26);
        final SObjectField sObjectField27 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField27);
        final SObjectField sObjectField28 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField28);
        final SObjectField sObjectField29 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField29);
        final SObjectField sObjectField30 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField30);

        description.setLabelPlural("Sites");
        description.setLabel("Site");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/Site/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/Site");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/Site/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("Site");

        return description;
    }
}
