/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject LoginIp
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("LoginIp")
public class LoginIp extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // UsersId
    private String UsersId;

    @JsonProperty("UsersId")
    public String getUsersId() {
        return this.UsersId;
    }

    @JsonProperty("UsersId")
    public void setUsersId(String UsersId) {
        this.UsersId = UsersId;
    }

    // SourceIp
    private String SourceIp;

    @JsonProperty("SourceIp")
    public String getSourceIp() {
        return this.SourceIp;
    }

    @JsonProperty("SourceIp")
    public void setSourceIp(String SourceIp) {
        this.SourceIp = SourceIp;
    }

    // IsAuthenticated
    private Boolean IsAuthenticated;

    @JsonProperty("IsAuthenticated")
    public Boolean getIsAuthenticated() {
        return this.IsAuthenticated;
    }

    @JsonProperty("IsAuthenticated")
    public void setIsAuthenticated(Boolean IsAuthenticated) {
        this.IsAuthenticated = IsAuthenticated;
    }

    // ChallengeSentDate
    private java.time.ZonedDateTime ChallengeSentDate;

    @JsonProperty("ChallengeSentDate")
    public java.time.ZonedDateTime getChallengeSentDate() {
        return this.ChallengeSentDate;
    }

    @JsonProperty("ChallengeSentDate")
    public void setChallengeSentDate(java.time.ZonedDateTime ChallengeSentDate) {
        this.ChallengeSentDate = ChallengeSentDate;
    }

    // ChallengeMethod
    @XStreamConverter(PicklistEnumConverter.class)
    private LoginIp_ChallengeMethodEnum ChallengeMethod;

    @JsonProperty("ChallengeMethod")
    public LoginIp_ChallengeMethodEnum getChallengeMethod() {
        return this.ChallengeMethod;
    }

    @JsonProperty("ChallengeMethod")
    public void setChallengeMethod(LoginIp_ChallengeMethodEnum ChallengeMethod) {
        this.ChallengeMethod = ChallengeMethod;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Login IP ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("UsersId", "User ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("SourceIp", "Source IP", "string", "xsd:string", 39, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("IsAuthenticated", "IsAuthenticated", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("ChallengeSentDate", "Challenge SentDate", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("ChallengeMethod", "Challenge Method", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);

        description.setLabelPlural("Login IP");
        description.setLabel("Login IP");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/LoginIp/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/LoginIp");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/LoginIp/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("LoginIp");

        return description;
    }
}
