/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject WebLink
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("WebLink")
public class WebLink extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // PageOrSobjectType
    @XStreamConverter(PicklistEnumConverter.class)
    private WebLink_PageOrSobjectTypeEnum PageOrSobjectType;

    @JsonProperty("PageOrSobjectType")
    public WebLink_PageOrSobjectTypeEnum getPageOrSobjectType() {
        return this.PageOrSobjectType;
    }

    @JsonProperty("PageOrSobjectType")
    public void setPageOrSobjectType(WebLink_PageOrSobjectTypeEnum PageOrSobjectType) {
        this.PageOrSobjectType = PageOrSobjectType;
    }

    // IsProtected
    private Boolean IsProtected;

    @JsonProperty("IsProtected")
    public Boolean getIsProtected() {
        return this.IsProtected;
    }

    @JsonProperty("IsProtected")
    public void setIsProtected(Boolean IsProtected) {
        this.IsProtected = IsProtected;
    }

    // Url
    private String Url;

    @JsonProperty("Url")
    public String getUrl() {
        return this.Url;
    }

    @JsonProperty("Url")
    public void setUrl(String Url) {
        this.Url = Url;
    }

    // EncodingKey
    @XStreamConverter(PicklistEnumConverter.class)
    private WebLink_EncodingKeyEnum EncodingKey;

    @JsonProperty("EncodingKey")
    public WebLink_EncodingKeyEnum getEncodingKey() {
        return this.EncodingKey;
    }

    @JsonProperty("EncodingKey")
    public void setEncodingKey(WebLink_EncodingKeyEnum EncodingKey) {
        this.EncodingKey = EncodingKey;
    }

    // LinkType
    @XStreamConverter(PicklistEnumConverter.class)
    private WebLink_LinkTypeEnum LinkType;

    @JsonProperty("LinkType")
    public WebLink_LinkTypeEnum getLinkType() {
        return this.LinkType;
    }

    @JsonProperty("LinkType")
    public void setLinkType(WebLink_LinkTypeEnum LinkType) {
        this.LinkType = LinkType;
    }

    // OpenType
    @XStreamConverter(PicklistEnumConverter.class)
    private WebLink_OpenTypeEnum OpenType;

    @JsonProperty("OpenType")
    public WebLink_OpenTypeEnum getOpenType() {
        return this.OpenType;
    }

    @JsonProperty("OpenType")
    public void setOpenType(WebLink_OpenTypeEnum OpenType) {
        this.OpenType = OpenType;
    }

    // Height
    private Integer Height;

    @JsonProperty("Height")
    public Integer getHeight() {
        return this.Height;
    }

    @JsonProperty("Height")
    public void setHeight(Integer Height) {
        this.Height = Height;
    }

    // Width
    private Integer Width;

    @JsonProperty("Width")
    public Integer getWidth() {
        return this.Width;
    }

    @JsonProperty("Width")
    public void setWidth(Integer Width) {
        this.Width = Width;
    }

    // ShowsLocation
    private Boolean ShowsLocation;

    @JsonProperty("ShowsLocation")
    public Boolean getShowsLocation() {
        return this.ShowsLocation;
    }

    @JsonProperty("ShowsLocation")
    public void setShowsLocation(Boolean ShowsLocation) {
        this.ShowsLocation = ShowsLocation;
    }

    // HasScrollbars
    private Boolean HasScrollbars;

    @JsonProperty("HasScrollbars")
    public Boolean getHasScrollbars() {
        return this.HasScrollbars;
    }

    @JsonProperty("HasScrollbars")
    public void setHasScrollbars(Boolean HasScrollbars) {
        this.HasScrollbars = HasScrollbars;
    }

    // HasToolbar
    private Boolean HasToolbar;

    @JsonProperty("HasToolbar")
    public Boolean getHasToolbar() {
        return this.HasToolbar;
    }

    @JsonProperty("HasToolbar")
    public void setHasToolbar(Boolean HasToolbar) {
        this.HasToolbar = HasToolbar;
    }

    // HasMenubar
    private Boolean HasMenubar;

    @JsonProperty("HasMenubar")
    public Boolean getHasMenubar() {
        return this.HasMenubar;
    }

    @JsonProperty("HasMenubar")
    public void setHasMenubar(Boolean HasMenubar) {
        this.HasMenubar = HasMenubar;
    }

    // ShowsStatus
    private Boolean ShowsStatus;

    @JsonProperty("ShowsStatus")
    public Boolean getShowsStatus() {
        return this.ShowsStatus;
    }

    @JsonProperty("ShowsStatus")
    public void setShowsStatus(Boolean ShowsStatus) {
        this.ShowsStatus = ShowsStatus;
    }

    // IsResizable
    private Boolean IsResizable;

    @JsonProperty("IsResizable")
    public Boolean getIsResizable() {
        return this.IsResizable;
    }

    @JsonProperty("IsResizable")
    public void setIsResizable(Boolean IsResizable) {
        this.IsResizable = IsResizable;
    }

    // Position
    @XStreamConverter(PicklistEnumConverter.class)
    private WebLink_PositionEnum Position;

    @JsonProperty("Position")
    public WebLink_PositionEnum getPosition() {
        return this.Position;
    }

    @JsonProperty("Position")
    public void setPosition(WebLink_PositionEnum Position) {
        this.Position = Position;
    }

    // ScontrolId
    private String ScontrolId;

    @JsonProperty("ScontrolId")
    public String getScontrolId() {
        return this.ScontrolId;
    }

    @JsonProperty("ScontrolId")
    public void setScontrolId(String ScontrolId) {
        this.ScontrolId = ScontrolId;
    }

    // MasterLabel
    private String MasterLabel;

    @JsonProperty("MasterLabel")
    public String getMasterLabel() {
        return this.MasterLabel;
    }

    @JsonProperty("MasterLabel")
    public void setMasterLabel(String MasterLabel) {
        this.MasterLabel = MasterLabel;
    }

    // Description
    private String Description;

    @JsonProperty("Description")
    public String getDescription() {
        return this.Description;
    }

    @JsonProperty("Description")
    public void setDescription(String Description) {
        this.Description = Description;
    }

    // DisplayType
    @XStreamConverter(PicklistEnumConverter.class)
    private WebLink_DisplayTypeEnum DisplayType;

    @JsonProperty("DisplayType")
    public WebLink_DisplayTypeEnum getDisplayType() {
        return this.DisplayType;
    }

    @JsonProperty("DisplayType")
    public void setDisplayType(WebLink_DisplayTypeEnum DisplayType) {
        this.DisplayType = DisplayType;
    }

    // RequireRowSelection
    private Boolean RequireRowSelection;

    @JsonProperty("RequireRowSelection")
    public Boolean getRequireRowSelection() {
        return this.RequireRowSelection;
    }

    @JsonProperty("RequireRowSelection")
    public void setRequireRowSelection(Boolean RequireRowSelection) {
        this.RequireRowSelection = RequireRowSelection;
    }

    // NamespacePrefix
    private String NamespacePrefix;

    @JsonProperty("NamespacePrefix")
    public String getNamespacePrefix() {
        return this.NamespacePrefix;
    }

    @JsonProperty("NamespacePrefix")
    public void setNamespacePrefix(String NamespacePrefix) {
        this.NamespacePrefix = NamespacePrefix;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Custom Link ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("PageOrSobjectType", "Page Or sObject Type Name", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("Name", "Name", "string", "xsd:string", 240, false, false, true, false, false, false, true);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("IsProtected", "Protected Component", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("Url", "URL", "textarea", "xsd:string", 1048576, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("EncodingKey", "Link Encoding", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("LinkType", "Content Source", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("OpenType", "Behavior", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("Height", "Height (in pixels)", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("Width", "Width (in pixels)", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("ShowsLocation", "Show Address Bar", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("HasScrollbars", "Show Scrollbars", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("HasToolbar", "Show Toolbars", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("HasMenubar", "Show Menu Bar", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("ShowsStatus", "Show Status Bar", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("IsResizable", "Resizeable", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("Position", "Window Position", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("ScontrolId", "Custom S-Control ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("MasterLabel", "Label", "string", "xsd:string", 240, false, true, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("Description", "Description", "textarea", "xsd:string", 1000, false, true, false, false, false, false, false);
        fields1.add(sObjectField20);
        final SObjectField sObjectField21 = createField("DisplayType", "Display Type", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField21);
        final SObjectField sObjectField22 = createField("RequireRowSelection", "Require Row Selection", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField22);
        final SObjectField sObjectField23 = createField("NamespacePrefix", "Namespace Prefix", "string", "xsd:string", 15, false, true, false, false, false, false, false);
        fields1.add(sObjectField23);
        final SObjectField sObjectField24 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField24);
        final SObjectField sObjectField25 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField25);
        final SObjectField sObjectField26 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField26);
        final SObjectField sObjectField27 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField27);
        final SObjectField sObjectField28 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField28);

        description.setLabelPlural("Custom Buttons or Links");
        description.setLabel("Custom Button or Link");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/WebLink/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/WebLink");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/WebLink/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("WebLink");

        return description;
    }
}
