/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject UserEntityAccess
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("UserEntityAccess")
public class UserEntityAccess extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // DurableId
    private String DurableId;

    @JsonProperty("DurableId")
    public String getDurableId() {
        return this.DurableId;
    }

    @JsonProperty("DurableId")
    public void setDurableId(String DurableId) {
        this.DurableId = DurableId;
    }

    // UserId
    private String UserId;

    @JsonProperty("UserId")
    public String getUserId() {
        return this.UserId;
    }

    @JsonProperty("UserId")
    public void setUserId(String UserId) {
        this.UserId = UserId;
    }

    // IsReadable
    private Boolean IsReadable;

    @JsonProperty("IsReadable")
    public Boolean getIsReadable() {
        return this.IsReadable;
    }

    @JsonProperty("IsReadable")
    public void setIsReadable(Boolean IsReadable) {
        this.IsReadable = IsReadable;
    }

    // IsCreatable
    private Boolean IsCreatable;

    @JsonProperty("IsCreatable")
    public Boolean getIsCreatable() {
        return this.IsCreatable;
    }

    @JsonProperty("IsCreatable")
    public void setIsCreatable(Boolean IsCreatable) {
        this.IsCreatable = IsCreatable;
    }

    // IsEditable
    private Boolean IsEditable;

    @JsonProperty("IsEditable")
    public Boolean getIsEditable() {
        return this.IsEditable;
    }

    @JsonProperty("IsEditable")
    public void setIsEditable(Boolean IsEditable) {
        this.IsEditable = IsEditable;
    }

    // IsDeletable
    private Boolean IsDeletable;

    @JsonProperty("IsDeletable")
    public Boolean getIsDeletable() {
        return this.IsDeletable;
    }

    @JsonProperty("IsDeletable")
    public void setIsDeletable(Boolean IsDeletable) {
        this.IsDeletable = IsDeletable;
    }

    // IsUndeletable
    private Boolean IsUndeletable;

    @JsonProperty("IsUndeletable")
    public Boolean getIsUndeletable() {
        return this.IsUndeletable;
    }

    @JsonProperty("IsUndeletable")
    public void setIsUndeletable(Boolean IsUndeletable) {
        this.IsUndeletable = IsUndeletable;
    }

    // EntityDefinitionId
    private String EntityDefinitionId;

    @JsonProperty("EntityDefinitionId")
    public String getEntityDefinitionId() {
        return this.EntityDefinitionId;
    }

    @JsonProperty("EntityDefinitionId")
    public void setEntityDefinitionId(String EntityDefinitionId) {
        this.EntityDefinitionId = EntityDefinitionId;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "User Entity Access ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("DurableId", "Durable ID", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("UserId", "User ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("IsReadable", "Is Readable", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("IsCreatable", "Is Creatable", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("IsEditable", "Is Editable", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("IsDeletable", "Is Deletable", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("IsUndeletable", "Is Undeletable", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("EntityDefinitionId", "Entity Definition ID", "string", "xsd:string", 150, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);

        description.setLabelPlural("User Entity Access");
        description.setLabel("User Entity Access");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/UserEntityAccess/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/UserEntityAccess");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/UserEntityAccess/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("UserEntityAccess");

        return description;
    }
}
