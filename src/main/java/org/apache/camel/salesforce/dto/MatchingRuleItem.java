/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject MatchingRuleItem
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("MatchingRuleItem")
public class MatchingRuleItem extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // MatchingRuleId
    private String MatchingRuleId;

    @JsonProperty("MatchingRuleId")
    public String getMatchingRuleId() {
        return this.MatchingRuleId;
    }

    @JsonProperty("MatchingRuleId")
    public void setMatchingRuleId(String MatchingRuleId) {
        this.MatchingRuleId = MatchingRuleId;
    }

    // SortOrder
    private Integer SortOrder;

    @JsonProperty("SortOrder")
    public Integer getSortOrder() {
        return this.SortOrder;
    }

    @JsonProperty("SortOrder")
    public void setSortOrder(Integer SortOrder) {
        this.SortOrder = SortOrder;
    }

    // Field
    @XStreamConverter(PicklistEnumConverter.class)
    private MatchingRuleItem_FieldEnum Field;

    @JsonProperty("Field")
    public MatchingRuleItem_FieldEnum getField() {
        return this.Field;
    }

    @JsonProperty("Field")
    public void setField(MatchingRuleItem_FieldEnum Field) {
        this.Field = Field;
    }

    // MatchingMethod
    @XStreamConverter(PicklistEnumConverter.class)
    private MatchingRuleItem_MatchingMethodEnum MatchingMethod;

    @JsonProperty("MatchingMethod")
    public MatchingRuleItem_MatchingMethodEnum getMatchingMethod() {
        return this.MatchingMethod;
    }

    @JsonProperty("MatchingMethod")
    public void setMatchingMethod(MatchingRuleItem_MatchingMethodEnum MatchingMethod) {
        this.MatchingMethod = MatchingMethod;
    }

    // BlankValueBehavior
    @XStreamConverter(PicklistEnumConverter.class)
    private MatchingRuleItem_BlankValueBehaviorEnum BlankValueBehavior;

    @JsonProperty("BlankValueBehavior")
    public MatchingRuleItem_BlankValueBehaviorEnum getBlankValueBehavior() {
        return this.BlankValueBehavior;
    }

    @JsonProperty("BlankValueBehavior")
    public void setBlankValueBehavior(MatchingRuleItem_BlankValueBehaviorEnum BlankValueBehavior) {
        this.BlankValueBehavior = BlankValueBehavior;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Matching Rule Item ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("MatchingRuleId", "Matching Rule ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("SortOrder", "Sort Order", "int", "xsd:int", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("Field", "Field", "picklist", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("MatchingMethod", "Custom Object Definition ID", "picklist", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("BlankValueBehavior", "Blank Value Behavior", "picklist", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);

        description.setLabelPlural("Matching Rule Items");
        description.setLabel("Matching Rule Item");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/MatchingRuleItem/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/MatchingRuleItem");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/MatchingRuleItem/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("MatchingRuleItem");

        return description;
    }
}
