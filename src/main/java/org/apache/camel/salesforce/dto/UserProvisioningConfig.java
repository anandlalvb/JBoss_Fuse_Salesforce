/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject UserProvisioningConfig
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("UserProvisioningConfig")
public class UserProvisioningConfig extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // DeveloperName
    private String DeveloperName;

    @JsonProperty("DeveloperName")
    public String getDeveloperName() {
        return this.DeveloperName;
    }

    @JsonProperty("DeveloperName")
    public void setDeveloperName(String DeveloperName) {
        this.DeveloperName = DeveloperName;
    }

    // Language
    @XStreamConverter(PicklistEnumConverter.class)
    private UserProvisioningConfig_LanguageEnum Language;

    @JsonProperty("Language")
    public UserProvisioningConfig_LanguageEnum getLanguage() {
        return this.Language;
    }

    @JsonProperty("Language")
    public void setLanguage(UserProvisioningConfig_LanguageEnum Language) {
        this.Language = Language;
    }

    // MasterLabel
    private String MasterLabel;

    @JsonProperty("MasterLabel")
    public String getMasterLabel() {
        return this.MasterLabel;
    }

    @JsonProperty("MasterLabel")
    public void setMasterLabel(String MasterLabel) {
        this.MasterLabel = MasterLabel;
    }

    // NamespacePrefix
    private String NamespacePrefix;

    @JsonProperty("NamespacePrefix")
    public String getNamespacePrefix() {
        return this.NamespacePrefix;
    }

    @JsonProperty("NamespacePrefix")
    public void setNamespacePrefix(String NamespacePrefix) {
        this.NamespacePrefix = NamespacePrefix;
    }

    // ConnectedAppId
    private String ConnectedAppId;

    @JsonProperty("ConnectedAppId")
    public String getConnectedAppId() {
        return this.ConnectedAppId;
    }

    @JsonProperty("ConnectedAppId")
    public void setConnectedAppId(String ConnectedAppId) {
        this.ConnectedAppId = ConnectedAppId;
    }

    // Notes
    private String Notes;

    @JsonProperty("Notes")
    public String getNotes() {
        return this.Notes;
    }

    @JsonProperty("Notes")
    public void setNotes(String Notes) {
        this.Notes = Notes;
    }

    // Enabled
    private Boolean Enabled;

    @JsonProperty("Enabled")
    public Boolean getEnabled() {
        return this.Enabled;
    }

    @JsonProperty("Enabled")
    public void setEnabled(Boolean Enabled) {
        this.Enabled = Enabled;
    }

    // ApprovalRequired
    private String ApprovalRequired;

    @JsonProperty("ApprovalRequired")
    public String getApprovalRequired() {
        return this.ApprovalRequired;
    }

    @JsonProperty("ApprovalRequired")
    public void setApprovalRequired(String ApprovalRequired) {
        this.ApprovalRequired = ApprovalRequired;
    }

    // UserAccountMapping
    private String UserAccountMapping;

    @JsonProperty("UserAccountMapping")
    public String getUserAccountMapping() {
        return this.UserAccountMapping;
    }

    @JsonProperty("UserAccountMapping")
    public void setUserAccountMapping(String UserAccountMapping) {
        this.UserAccountMapping = UserAccountMapping;
    }

    // EnabledOperations
    private String EnabledOperations;

    @JsonProperty("EnabledOperations")
    public String getEnabledOperations() {
        return this.EnabledOperations;
    }

    @JsonProperty("EnabledOperations")
    public void setEnabledOperations(String EnabledOperations) {
        this.EnabledOperations = EnabledOperations;
    }

    // OnUpdateAttributes
    private String OnUpdateAttributes;

    @JsonProperty("OnUpdateAttributes")
    public String getOnUpdateAttributes() {
        return this.OnUpdateAttributes;
    }

    @JsonProperty("OnUpdateAttributes")
    public void setOnUpdateAttributes(String OnUpdateAttributes) {
        this.OnUpdateAttributes = OnUpdateAttributes;
    }

    // LastReconDateTime
    private java.time.ZonedDateTime LastReconDateTime;

    @JsonProperty("LastReconDateTime")
    public java.time.ZonedDateTime getLastReconDateTime() {
        return this.LastReconDateTime;
    }

    @JsonProperty("LastReconDateTime")
    public void setLastReconDateTime(java.time.ZonedDateTime LastReconDateTime) {
        this.LastReconDateTime = LastReconDateTime;
    }

    // NamedCredentialId
    private String NamedCredentialId;

    @JsonProperty("NamedCredentialId")
    public String getNamedCredentialId() {
        return this.NamedCredentialId;
    }

    @JsonProperty("NamedCredentialId")
    public void setNamedCredentialId(String NamedCredentialId) {
        this.NamedCredentialId = NamedCredentialId;
    }

    // ReconFilter
    private String ReconFilter;

    @JsonProperty("ReconFilter")
    public String getReconFilter() {
        return this.ReconFilter;
    }

    @JsonProperty("ReconFilter")
    public void setReconFilter(String ReconFilter) {
        this.ReconFilter = ReconFilter;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "UserProvisioningConfig ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("DeveloperName", "Name", "string", "xsd:string", 80, false, false, true, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("Language", "Master Language", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("MasterLabel", "Label", "string", "xsd:string", 80, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("NamespacePrefix", "Namespace Prefix", "string", "xsd:string", 15, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("ConnectedAppId", "Connected App ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("Notes", "Notes", "textarea", "xsd:string", 65536, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("Enabled", "Enabled", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("ApprovalRequired", "Approval Required", "textarea", "xsd:string", 4000, false, true, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("UserAccountMapping", "User Account Mapping", "textarea", "xsd:string", 4000, false, true, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("EnabledOperations", "Enabled Operations", "textarea", "xsd:string", 4000, false, true, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("OnUpdateAttributes", "On Update Attributes", "textarea", "xsd:string", 4000, false, true, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("LastReconDateTime", "Last Recon Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("NamedCredentialId", "Named Credential ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField20);
        final SObjectField sObjectField21 = createField("ReconFilter", "Recon Filter", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField21);

        description.setLabelPlural("User Provisioning Configs");
        description.setLabel("User Provisioning Config");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/UserProvisioningConfig/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/UserProvisioningConfig");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/UserProvisioningConfig/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("UserProvisioningConfig");

        return description;
    }
}
