/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject CollaborationInvitation
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("CollaborationInvitation")
public class CollaborationInvitation extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // ParentId
    private String ParentId;

    @JsonProperty("ParentId")
    public String getParentId() {
        return this.ParentId;
    }

    @JsonProperty("ParentId")
    public void setParentId(String ParentId) {
        this.ParentId = ParentId;
    }

    // SharedEntityId
    private String SharedEntityId;

    @JsonProperty("SharedEntityId")
    public String getSharedEntityId() {
        return this.SharedEntityId;
    }

    @JsonProperty("SharedEntityId")
    public void setSharedEntityId(String SharedEntityId) {
        this.SharedEntityId = SharedEntityId;
    }

    // InviterId
    private String InviterId;

    @JsonProperty("InviterId")
    public String getInviterId() {
        return this.InviterId;
    }

    @JsonProperty("InviterId")
    public void setInviterId(String InviterId) {
        this.InviterId = InviterId;
    }

    // InvitedUserEmail
    private String InvitedUserEmail;

    @JsonProperty("InvitedUserEmail")
    public String getInvitedUserEmail() {
        return this.InvitedUserEmail;
    }

    @JsonProperty("InvitedUserEmail")
    public void setInvitedUserEmail(String InvitedUserEmail) {
        this.InvitedUserEmail = InvitedUserEmail;
    }

    // InvitedUserEmailNormalized
    private String InvitedUserEmailNormalized;

    @JsonProperty("InvitedUserEmailNormalized")
    public String getInvitedUserEmailNormalized() {
        return this.InvitedUserEmailNormalized;
    }

    @JsonProperty("InvitedUserEmailNormalized")
    public void setInvitedUserEmailNormalized(String InvitedUserEmailNormalized) {
        this.InvitedUserEmailNormalized = InvitedUserEmailNormalized;
    }

    // Status
    @XStreamConverter(PicklistEnumConverter.class)
    private CollaborationInvitation_StatusEnum Status;

    @JsonProperty("Status")
    public CollaborationInvitation_StatusEnum getStatus() {
        return this.Status;
    }

    @JsonProperty("Status")
    public void setStatus(CollaborationInvitation_StatusEnum Status) {
        this.Status = Status;
    }

    // OptionalMessage
    private String OptionalMessage;

    @JsonProperty("OptionalMessage")
    public String getOptionalMessage() {
        return this.OptionalMessage;
    }

    @JsonProperty("OptionalMessage")
    public void setOptionalMessage(String OptionalMessage) {
        this.OptionalMessage = OptionalMessage;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Chatter Invitation Id", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("ParentId", "Parent ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("SharedEntityId", "Shared Entity ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("InviterId", "Inviter User ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("InvitedUserEmail", "Invited Email", "string", "xsd:string", 240, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("InvitedUserEmailNormalized", "Invited Email (Normalized)", "email", "xsd:string", 80, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("Status", "Invitation Status", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("OptionalMessage", "Optional Message", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("LastModifiedDate", "Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField13);

        description.setLabelPlural("Chatter Invitations");
        description.setLabel("Chatter Invitation");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/CollaborationInvitation/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/CollaborationInvitation");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/CollaborationInvitation/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("CollaborationInvitation");

        return description;
    }
}
