/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject MatchingRule
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("MatchingRule")
public class MatchingRule extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // SobjectType
    @XStreamConverter(PicklistEnumConverter.class)
    private MatchingRule_SobjectTypeEnum SobjectType;

    @JsonProperty("SobjectType")
    public MatchingRule_SobjectTypeEnum getSobjectType() {
        return this.SobjectType;
    }

    @JsonProperty("SobjectType")
    public void setSobjectType(MatchingRule_SobjectTypeEnum SobjectType) {
        this.SobjectType = SobjectType;
    }

    // DeveloperName
    private String DeveloperName;

    @JsonProperty("DeveloperName")
    public String getDeveloperName() {
        return this.DeveloperName;
    }

    @JsonProperty("DeveloperName")
    public void setDeveloperName(String DeveloperName) {
        this.DeveloperName = DeveloperName;
    }

    // Language
    @XStreamConverter(PicklistEnumConverter.class)
    private MatchingRule_LanguageEnum Language;

    @JsonProperty("Language")
    public MatchingRule_LanguageEnum getLanguage() {
        return this.Language;
    }

    @JsonProperty("Language")
    public void setLanguage(MatchingRule_LanguageEnum Language) {
        this.Language = Language;
    }

    // MasterLabel
    private String MasterLabel;

    @JsonProperty("MasterLabel")
    public String getMasterLabel() {
        return this.MasterLabel;
    }

    @JsonProperty("MasterLabel")
    public void setMasterLabel(String MasterLabel) {
        this.MasterLabel = MasterLabel;
    }

    // NamespacePrefix
    private String NamespacePrefix;

    @JsonProperty("NamespacePrefix")
    public String getNamespacePrefix() {
        return this.NamespacePrefix;
    }

    @JsonProperty("NamespacePrefix")
    public void setNamespacePrefix(String NamespacePrefix) {
        this.NamespacePrefix = NamespacePrefix;
    }

    // MatchEngine
    @XStreamConverter(PicklistEnumConverter.class)
    private MatchingRule_MatchEngineEnum MatchEngine;

    @JsonProperty("MatchEngine")
    public MatchingRule_MatchEngineEnum getMatchEngine() {
        return this.MatchEngine;
    }

    @JsonProperty("MatchEngine")
    public void setMatchEngine(MatchingRule_MatchEngineEnum MatchEngine) {
        this.MatchEngine = MatchEngine;
    }

    // BooleanFilter
    private String BooleanFilter;

    @JsonProperty("BooleanFilter")
    public String getBooleanFilter() {
        return this.BooleanFilter;
    }

    @JsonProperty("BooleanFilter")
    public void setBooleanFilter(String BooleanFilter) {
        this.BooleanFilter = BooleanFilter;
    }

    // Description
    private String Description;

    @JsonProperty("Description")
    public String getDescription() {
        return this.Description;
    }

    @JsonProperty("Description")
    public void setDescription(String Description) {
        this.Description = Description;
    }

    // RuleStatus
    @XStreamConverter(PicklistEnumConverter.class)
    private MatchingRule_RuleStatusEnum RuleStatus;

    @JsonProperty("RuleStatus")
    public MatchingRule_RuleStatusEnum getRuleStatus() {
        return this.RuleStatus;
    }

    @JsonProperty("RuleStatus")
    public void setRuleStatus(MatchingRule_RuleStatusEnum RuleStatus) {
        this.RuleStatus = RuleStatus;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Matching Rule ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("SobjectType", "Custom Object Definition ID", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("DeveloperName", "Unique Name", "string", "xsd:string", 80, false, false, true, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("Language", "Master Language", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("MasterLabel", "Rule Name", "string", "xsd:string", 80, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("NamespacePrefix", "Namespace Prefix", "string", "xsd:string", 15, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("MatchEngine", "Custom Object Definition ID", "picklist", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("BooleanFilter", "Advanced Logic", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("Description", "Description", "textarea", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("RuleStatus", "Status", "picklist", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField16);

        description.setLabelPlural("Matching Rules");
        description.setLabel("Matching Rule");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/MatchingRule/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/MatchingRule");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/MatchingRule/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("MatchingRule");

        return description;
    }
}
