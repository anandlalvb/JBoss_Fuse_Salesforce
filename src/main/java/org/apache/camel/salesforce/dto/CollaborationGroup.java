/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject CollaborationGroup
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("CollaborationGroup")
public class CollaborationGroup extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // MemberCount
    private Integer MemberCount;

    @JsonProperty("MemberCount")
    public Integer getMemberCount() {
        return this.MemberCount;
    }

    @JsonProperty("MemberCount")
    public void setMemberCount(Integer MemberCount) {
        this.MemberCount = MemberCount;
    }

    // CollaborationType
    @XStreamConverter(PicklistEnumConverter.class)
    private CollaborationGroup_CollaborationTypeEnum CollaborationType;

    @JsonProperty("CollaborationType")
    public CollaborationGroup_CollaborationTypeEnum getCollaborationType() {
        return this.CollaborationType;
    }

    @JsonProperty("CollaborationType")
    public void setCollaborationType(CollaborationGroup_CollaborationTypeEnum CollaborationType) {
        this.CollaborationType = CollaborationType;
    }

    // Description
    private String Description;

    @JsonProperty("Description")
    public String getDescription() {
        return this.Description;
    }

    @JsonProperty("Description")
    public void setDescription(String Description) {
        this.Description = Description;
    }

    // FullPhotoUrl
    private String FullPhotoUrl;

    @JsonProperty("FullPhotoUrl")
    public String getFullPhotoUrl() {
        return this.FullPhotoUrl;
    }

    @JsonProperty("FullPhotoUrl")
    public void setFullPhotoUrl(String FullPhotoUrl) {
        this.FullPhotoUrl = FullPhotoUrl;
    }

    // SmallPhotoUrl
    private String SmallPhotoUrl;

    @JsonProperty("SmallPhotoUrl")
    public String getSmallPhotoUrl() {
        return this.SmallPhotoUrl;
    }

    @JsonProperty("SmallPhotoUrl")
    public void setSmallPhotoUrl(String SmallPhotoUrl) {
        this.SmallPhotoUrl = SmallPhotoUrl;
    }

    // LastFeedModifiedDate
    private java.time.ZonedDateTime LastFeedModifiedDate;

    @JsonProperty("LastFeedModifiedDate")
    public java.time.ZonedDateTime getLastFeedModifiedDate() {
        return this.LastFeedModifiedDate;
    }

    @JsonProperty("LastFeedModifiedDate")
    public void setLastFeedModifiedDate(java.time.ZonedDateTime LastFeedModifiedDate) {
        this.LastFeedModifiedDate = LastFeedModifiedDate;
    }

    // InformationTitle
    private String InformationTitle;

    @JsonProperty("InformationTitle")
    public String getInformationTitle() {
        return this.InformationTitle;
    }

    @JsonProperty("InformationTitle")
    public void setInformationTitle(String InformationTitle) {
        this.InformationTitle = InformationTitle;
    }

    // InformationBody
    private String InformationBody;

    @JsonProperty("InformationBody")
    public String getInformationBody() {
        return this.InformationBody;
    }

    @JsonProperty("InformationBody")
    public void setInformationBody(String InformationBody) {
        this.InformationBody = InformationBody;
    }

    // HasPrivateFieldsAccess
    private Boolean HasPrivateFieldsAccess;

    @JsonProperty("HasPrivateFieldsAccess")
    public Boolean getHasPrivateFieldsAccess() {
        return this.HasPrivateFieldsAccess;
    }

    @JsonProperty("HasPrivateFieldsAccess")
    public void setHasPrivateFieldsAccess(Boolean HasPrivateFieldsAccess) {
        this.HasPrivateFieldsAccess = HasPrivateFieldsAccess;
    }

    // CanHaveGuests
    private Boolean CanHaveGuests;

    @JsonProperty("CanHaveGuests")
    public Boolean getCanHaveGuests() {
        return this.CanHaveGuests;
    }

    @JsonProperty("CanHaveGuests")
    public void setCanHaveGuests(Boolean CanHaveGuests) {
        this.CanHaveGuests = CanHaveGuests;
    }

    // IsArchived
    private Boolean IsArchived;

    @JsonProperty("IsArchived")
    public Boolean getIsArchived() {
        return this.IsArchived;
    }

    @JsonProperty("IsArchived")
    public void setIsArchived(Boolean IsArchived) {
        this.IsArchived = IsArchived;
    }

    // IsAutoArchiveDisabled
    private Boolean IsAutoArchiveDisabled;

    @JsonProperty("IsAutoArchiveDisabled")
    public Boolean getIsAutoArchiveDisabled() {
        return this.IsAutoArchiveDisabled;
    }

    @JsonProperty("IsAutoArchiveDisabled")
    public void setIsAutoArchiveDisabled(Boolean IsAutoArchiveDisabled) {
        this.IsAutoArchiveDisabled = IsAutoArchiveDisabled;
    }

    // AnnouncementId
    private String AnnouncementId;

    @JsonProperty("AnnouncementId")
    public String getAnnouncementId() {
        return this.AnnouncementId;
    }

    @JsonProperty("AnnouncementId")
    public void setAnnouncementId(String AnnouncementId) {
        this.AnnouncementId = AnnouncementId;
    }

    // GroupEmail
    private String GroupEmail;

    @JsonProperty("GroupEmail")
    public String getGroupEmail() {
        return this.GroupEmail;
    }

    @JsonProperty("GroupEmail")
    public void setGroupEmail(String GroupEmail) {
        this.GroupEmail = GroupEmail;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Group Id", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("Name", "Name", "string", "xsd:string", 40, false, false, true, false, false, false, true);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("MemberCount", "Member Count", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("OwnerId", "Owner ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("CollaborationType", "Access Type", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("Description", "Description", "textarea", "xsd:string", 1000, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("FullPhotoUrl", "Url for full-sized Photo", "url", "xsd:string", 1024, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("SmallPhotoUrl", "Photo", "url", "xsd:string", 1024, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("LastFeedModifiedDate", "Last Feed Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("InformationTitle", "Information Title", "string", "xsd:string", 30, false, true, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("InformationBody", "Information", "textarea", "xsd:string", 4000, false, true, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("HasPrivateFieldsAccess", "Has Private Fields Access", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("CanHaveGuests", "Allow customers", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("LastViewedDate", "Last Viewed Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("LastReferencedDate", "Last Referenced Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField20);
        final SObjectField sObjectField21 = createField("IsArchived", "Archive", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField21);
        final SObjectField sObjectField22 = createField("IsAutoArchiveDisabled", "Disable automatic archiving", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField22);
        final SObjectField sObjectField23 = createField("AnnouncementId", "Announcement ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField23);
        final SObjectField sObjectField24 = createField("GroupEmail", "Group Email", "email", "xsd:string", 1000, false, true, false, false, false, false, false);
        fields1.add(sObjectField24);

        description.setLabelPlural("Groups");
        description.setLabel("Group");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/CollaborationGroup/describe");
        sObjectDescriptionUrls1.setLayouts("/services/data/v34.0/sobjects/CollaborationGroup/describe/layouts");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/CollaborationGroup");
        sObjectDescriptionUrls1.setQuickActions("/services/data/v34.0/sobjects/CollaborationGroup/quickActions");
        sObjectDescriptionUrls1.setUiEditTemplate("https://na57.salesforce.com/{ID}/e");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/CollaborationGroup/{ID}");
        sObjectDescriptionUrls1.setListviews("/services/data/v34.0/sobjects/CollaborationGroup/listviews");
        sObjectDescriptionUrls1.setCompactLayouts("/services/data/v34.0/sobjects/CollaborationGroup/describe/compactLayouts");
        sObjectDescriptionUrls1.setUiNewRecord("https://na57.salesforce.com/0F9/e");
        sObjectDescriptionUrls1.setUiDetailTemplate("https://na57.salesforce.com/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("CollaborationGroup");

        return description;
    }
}
