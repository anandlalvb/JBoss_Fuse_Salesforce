/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import javax.annotation.Generated;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Salesforce Enumeration DTO for picklist Type
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
public enum Name_TypeEnum {

    // Account
    ACCOUNT("Account"),
    // AccountCleanInfo
    ACCOUNTCLEANINFO("AccountCleanInfo"),
    // AccountContactRole
    ACCOUNTCONTACTROLE("AccountContactRole"),
    // Announcement
    ANNOUNCEMENT("Announcement"),
    // Asset
    ASSET("Asset"),
    // BackgroundOperation
    BACKGROUNDOPERATION("BackgroundOperation"),
    // Campaign
    CAMPAIGN("Campaign"),
    // Case
    CASE("Case"),
    // CollaborationGroup
    COLLABORATIONGROUP("CollaborationGroup"),
    // CollaborationGroupRecord
    COLLABORATIONGROUPRECORD("CollaborationGroupRecord"),
    // Contact
    CONTACT("Contact"),
    // ContactCleanInfo
    CONTACTCLEANINFO("ContactCleanInfo"),
    // ContentDistribution
    CONTENTDISTRIBUTION("ContentDistribution"),
    // ContentDocument
    CONTENTDOCUMENT("ContentDocument"),
    // ContentFolder
    CONTENTFOLDER("ContentFolder"),
    // ContentVersion
    CONTENTVERSION("ContentVersion"),
    // Contract
    CONTRACT("Contract"),
    // DandBCompany
    DANDBCOMPANY("DandBCompany"),
    // Dashboard
    DASHBOARD("Dashboard"),
    // DashboardComponent
    DASHBOARDCOMPONENT("DashboardComponent"),
    // DatacloudOwnedEntity
    DATACLOUDOWNEDENTITY("DatacloudOwnedEntity"),
    // DatacloudPurchaseUsage
    DATACLOUDPURCHASEUSAGE("DatacloudPurchaseUsage"),
    // Document
    DOCUMENT("Document"),
    // DuplicateRecordItem
    DUPLICATERECORDITEM("DuplicateRecordItem"),
    // DuplicateRecordSet
    DUPLICATERECORDSET("DuplicateRecordSet"),
    // EmailMessage
    EMAILMESSAGE("EmailMessage"),
    // Event
    EVENT("Event"),
    // FlowInterview
    FLOWINTERVIEW("FlowInterview"),
    // Idea
    IDEA("Idea"),
    // IdeaComment
    IDEACOMMENT("IdeaComment"),
    // InstalledMobileApp
    INSTALLEDMOBILEAPP("InstalledMobileApp"),
    // Lead
    LEAD("Lead"),
    // LeadCleanInfo
    LEADCLEANINFO("LeadCleanInfo"),
    // Macro
    MACRO("Macro"),
    // Opportunity
    OPPORTUNITY("Opportunity"),
    // Order
    ORDER("Order"),
    // OrderItem
    ORDERITEM("OrderItem"),
    // Pricebook2
    PRICEBOOK2("Pricebook2"),
    // ProcessInstanceNode
    PROCESSINSTANCENODE("ProcessInstanceNode"),
    // Product2
    PRODUCT2("Product2"),
    // Queue
    QUEUE("Queue"),
    // QuickText
    QUICKTEXT("QuickText"),
    // Report
    REPORT("Report"),
    // SearchPromotionRule
    SEARCHPROMOTIONRULE("SearchPromotionRule"),
    // SelfServiceUser
    SELFSERVICEUSER("SelfServiceUser"),
    // Solution
    SOLUTION("Solution"),
    // StreamingChannel
    STREAMINGCHANNEL("StreamingChannel"),
    // Task
    TASK("Task"),
    // Topic
    TOPIC("Topic"),
    // User
    USER("User"),
    // UserProvAccount
    USERPROVACCOUNT("UserProvAccount"),
    // UserProvAccountStaging
    USERPROVACCOUNTSTAGING("UserProvAccountStaging"),
    // UserProvMockTarget
    USERPROVMOCKTARGET("UserProvMockTarget"),
    // UserProvisioningLog
    USERPROVISIONINGLOG("UserProvisioningLog"),
    // UserProvisioningRequest
    USERPROVISIONINGREQUEST("UserProvisioningRequest");

    final String value;

    private Name_TypeEnum(String value) {
        this.value = value;
    }

    @JsonValue
    public String value() {
        return this.value;
    }

    @JsonCreator
    public static Name_TypeEnum fromValue(String value) {
        for (Name_TypeEnum e : Name_TypeEnum.values()) {
            if (e.value.equals(value)) {
                return e;
            }
        }
        throw new IllegalArgumentException(value);
    }

}
