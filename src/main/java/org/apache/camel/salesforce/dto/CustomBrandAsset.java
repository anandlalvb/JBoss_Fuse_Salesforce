/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject CustomBrandAsset
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("CustomBrandAsset")
public class CustomBrandAsset extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // CustomBrandId
    private String CustomBrandId;

    @JsonProperty("CustomBrandId")
    public String getCustomBrandId() {
        return this.CustomBrandId;
    }

    @JsonProperty("CustomBrandId")
    public void setCustomBrandId(String CustomBrandId) {
        this.CustomBrandId = CustomBrandId;
    }

    // AssetCategory
    @XStreamConverter(PicklistEnumConverter.class)
    private CustomBrandAsset_AssetCategoryEnum AssetCategory;

    @JsonProperty("AssetCategory")
    public CustomBrandAsset_AssetCategoryEnum getAssetCategory() {
        return this.AssetCategory;
    }

    @JsonProperty("AssetCategory")
    public void setAssetCategory(CustomBrandAsset_AssetCategoryEnum AssetCategory) {
        this.AssetCategory = AssetCategory;
    }

    // TextAsset
    private String TextAsset;

    @JsonProperty("TextAsset")
    public String getTextAsset() {
        return this.TextAsset;
    }

    @JsonProperty("TextAsset")
    public void setTextAsset(String TextAsset) {
        this.TextAsset = TextAsset;
    }

    // ForeignKeyAssetId
    private String ForeignKeyAssetId;

    @JsonProperty("ForeignKeyAssetId")
    public String getForeignKeyAssetId() {
        return this.ForeignKeyAssetId;
    }

    @JsonProperty("ForeignKeyAssetId")
    public void setForeignKeyAssetId(String ForeignKeyAssetId) {
        this.ForeignKeyAssetId = ForeignKeyAssetId;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Custom Brand Asset ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("CustomBrandId", "Custom Brand ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("AssetCategory", "Asset Category", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("TextAsset", "Text Asset", "string", "xsd:string", 333, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("ForeignKeyAssetId", "Foreign key asset ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("LastModifiedDate", "Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);

        description.setLabelPlural("Custom Brand Asset");
        description.setLabel("Custom Brand Asset");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/CustomBrandAsset/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/CustomBrandAsset");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/CustomBrandAsset/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("CustomBrandAsset");

        return description;
    }
}
