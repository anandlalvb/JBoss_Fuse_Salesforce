/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject FiscalYearSettings
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("FiscalYearSettings")
public class FiscalYearSettings extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // PeriodId
    private String PeriodId;

    @JsonProperty("PeriodId")
    public String getPeriodId() {
        return this.PeriodId;
    }

    @JsonProperty("PeriodId")
    public void setPeriodId(String PeriodId) {
        this.PeriodId = PeriodId;
    }

    // StartDate
    private java.time.LocalDate StartDate;

    @JsonProperty("StartDate")
    public java.time.LocalDate getStartDate() {
        return this.StartDate;
    }

    @JsonProperty("StartDate")
    public void setStartDate(java.time.LocalDate StartDate) {
        this.StartDate = StartDate;
    }

    // EndDate
    private java.time.LocalDate EndDate;

    @JsonProperty("EndDate")
    public java.time.LocalDate getEndDate() {
        return this.EndDate;
    }

    @JsonProperty("EndDate")
    public void setEndDate(java.time.LocalDate EndDate) {
        this.EndDate = EndDate;
    }

    // IsStandardYear
    private Boolean IsStandardYear;

    @JsonProperty("IsStandardYear")
    public Boolean getIsStandardYear() {
        return this.IsStandardYear;
    }

    @JsonProperty("IsStandardYear")
    public void setIsStandardYear(Boolean IsStandardYear) {
        this.IsStandardYear = IsStandardYear;
    }

    // YearType
    @XStreamConverter(PicklistEnumConverter.class)
    private FiscalYearSettings_YearTypeEnum YearType;

    @JsonProperty("YearType")
    public FiscalYearSettings_YearTypeEnum getYearType() {
        return this.YearType;
    }

    @JsonProperty("YearType")
    public void setYearType(FiscalYearSettings_YearTypeEnum YearType) {
        this.YearType = YearType;
    }

    // QuarterLabelScheme
    @XStreamConverter(PicklistEnumConverter.class)
    private FiscalYearSettings_QuarterLabelSchemeEnum QuarterLabelScheme;

    @JsonProperty("QuarterLabelScheme")
    public FiscalYearSettings_QuarterLabelSchemeEnum getQuarterLabelScheme() {
        return this.QuarterLabelScheme;
    }

    @JsonProperty("QuarterLabelScheme")
    public void setQuarterLabelScheme(FiscalYearSettings_QuarterLabelSchemeEnum QuarterLabelScheme) {
        this.QuarterLabelScheme = QuarterLabelScheme;
    }

    // PeriodLabelScheme
    @XStreamConverter(PicklistEnumConverter.class)
    private FiscalYearSettings_PeriodLabelSchemeEnum PeriodLabelScheme;

    @JsonProperty("PeriodLabelScheme")
    public FiscalYearSettings_PeriodLabelSchemeEnum getPeriodLabelScheme() {
        return this.PeriodLabelScheme;
    }

    @JsonProperty("PeriodLabelScheme")
    public void setPeriodLabelScheme(FiscalYearSettings_PeriodLabelSchemeEnum PeriodLabelScheme) {
        this.PeriodLabelScheme = PeriodLabelScheme;
    }

    // WeekLabelScheme
    @XStreamConverter(PicklistEnumConverter.class)
    private FiscalYearSettings_WeekLabelSchemeEnum WeekLabelScheme;

    @JsonProperty("WeekLabelScheme")
    public FiscalYearSettings_WeekLabelSchemeEnum getWeekLabelScheme() {
        return this.WeekLabelScheme;
    }

    @JsonProperty("WeekLabelScheme")
    public void setWeekLabelScheme(FiscalYearSettings_WeekLabelSchemeEnum WeekLabelScheme) {
        this.WeekLabelScheme = WeekLabelScheme;
    }

    // QuarterPrefix
    @XStreamConverter(PicklistEnumConverter.class)
    private FiscalYearSettings_QuarterPrefixEnum QuarterPrefix;

    @JsonProperty("QuarterPrefix")
    public FiscalYearSettings_QuarterPrefixEnum getQuarterPrefix() {
        return this.QuarterPrefix;
    }

    @JsonProperty("QuarterPrefix")
    public void setQuarterPrefix(FiscalYearSettings_QuarterPrefixEnum QuarterPrefix) {
        this.QuarterPrefix = QuarterPrefix;
    }

    // PeriodPrefix
    @XStreamConverter(PicklistEnumConverter.class)
    private FiscalYearSettings_PeriodPrefixEnum PeriodPrefix;

    @JsonProperty("PeriodPrefix")
    public FiscalYearSettings_PeriodPrefixEnum getPeriodPrefix() {
        return this.PeriodPrefix;
    }

    @JsonProperty("PeriodPrefix")
    public void setPeriodPrefix(FiscalYearSettings_PeriodPrefixEnum PeriodPrefix) {
        this.PeriodPrefix = PeriodPrefix;
    }

    // WeekStartDay
    private Integer WeekStartDay;

    @JsonProperty("WeekStartDay")
    public Integer getWeekStartDay() {
        return this.WeekStartDay;
    }

    @JsonProperty("WeekStartDay")
    public void setWeekStartDay(Integer WeekStartDay) {
        this.WeekStartDay = WeekStartDay;
    }

    // Description
    private String Description;

    @JsonProperty("Description")
    public String getDescription() {
        return this.Description;
    }

    @JsonProperty("Description")
    public void setDescription(String Description) {
        this.Description = Description;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Fiscal Year Settings ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("PeriodId", "Period ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("StartDate", "Start Date", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("EndDate", "End Date", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("Name", "Name", "string", "xsd:string", 80, false, false, true, false, false, false, true);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("IsStandardYear", "Is Standard Year", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("YearType", "Year Type", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("QuarterLabelScheme", "Quarter Name Scheme", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("PeriodLabelScheme", "Period Name Scheme", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("WeekLabelScheme", "Week Name Scheme", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("QuarterPrefix", "Quarter Prefix", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("PeriodPrefix", "Period Prefix", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("WeekStartDay", "Week Start Day", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("Description", "Description", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField15);

        description.setLabelPlural("Fiscal Year Settings");
        description.setLabel("Fiscal Year Settings");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/FiscalYearSettings/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/FiscalYearSettings");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/FiscalYearSettings/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("FiscalYearSettings");

        return description;
    }
}
