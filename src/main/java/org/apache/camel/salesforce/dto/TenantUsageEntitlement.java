/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject TenantUsageEntitlement
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("TenantUsageEntitlement")
public class TenantUsageEntitlement extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // ResourceGroupKey
    private String ResourceGroupKey;

    @JsonProperty("ResourceGroupKey")
    public String getResourceGroupKey() {
        return this.ResourceGroupKey;
    }

    @JsonProperty("ResourceGroupKey")
    public void setResourceGroupKey(String ResourceGroupKey) {
        this.ResourceGroupKey = ResourceGroupKey;
    }

    // Setting
    private String Setting;

    @JsonProperty("Setting")
    public String getSetting() {
        return this.Setting;
    }

    @JsonProperty("Setting")
    public void setSetting(String Setting) {
        this.Setting = Setting;
    }

    // StartDate
    private java.time.LocalDate StartDate;

    @JsonProperty("StartDate")
    public java.time.LocalDate getStartDate() {
        return this.StartDate;
    }

    @JsonProperty("StartDate")
    public void setStartDate(java.time.LocalDate StartDate) {
        this.StartDate = StartDate;
    }

    // EndDate
    private java.time.LocalDate EndDate;

    @JsonProperty("EndDate")
    public java.time.LocalDate getEndDate() {
        return this.EndDate;
    }

    @JsonProperty("EndDate")
    public void setEndDate(java.time.LocalDate EndDate) {
        this.EndDate = EndDate;
    }

    // CurrentAmountAllowed
    private Double CurrentAmountAllowed;

    @JsonProperty("CurrentAmountAllowed")
    public Double getCurrentAmountAllowed() {
        return this.CurrentAmountAllowed;
    }

    @JsonProperty("CurrentAmountAllowed")
    public void setCurrentAmountAllowed(Double CurrentAmountAllowed) {
        this.CurrentAmountAllowed = CurrentAmountAllowed;
    }

    // Frequency
    @XStreamConverter(PicklistEnumConverter.class)
    private TenantUsageEntitlement_FrequencyEnum Frequency;

    @JsonProperty("Frequency")
    public TenantUsageEntitlement_FrequencyEnum getFrequency() {
        return this.Frequency;
    }

    @JsonProperty("Frequency")
    public void setFrequency(TenantUsageEntitlement_FrequencyEnum Frequency) {
        this.Frequency = Frequency;
    }

    // IsPersistentResource
    private Boolean IsPersistentResource;

    @JsonProperty("IsPersistentResource")
    public Boolean getIsPersistentResource() {
        return this.IsPersistentResource;
    }

    @JsonProperty("IsPersistentResource")
    public void setIsPersistentResource(Boolean IsPersistentResource) {
        this.IsPersistentResource = IsPersistentResource;
    }

    // HasRollover
    private Boolean HasRollover;

    @JsonProperty("HasRollover")
    public Boolean getHasRollover() {
        return this.HasRollover;
    }

    @JsonProperty("HasRollover")
    public void setHasRollover(Boolean HasRollover) {
        this.HasRollover = HasRollover;
    }

    // OverageGrace
    private Double OverageGrace;

    @JsonProperty("OverageGrace")
    public Double getOverageGrace() {
        return this.OverageGrace;
    }

    @JsonProperty("OverageGrace")
    public void setOverageGrace(Double OverageGrace) {
        this.OverageGrace = OverageGrace;
    }

    // AmountUsed
    private Double AmountUsed;

    @JsonProperty("AmountUsed")
    public Double getAmountUsed() {
        return this.AmountUsed;
    }

    @JsonProperty("AmountUsed")
    public void setAmountUsed(Double AmountUsed) {
        this.AmountUsed = AmountUsed;
    }

    // UsageDate
    private java.time.ZonedDateTime UsageDate;

    @JsonProperty("UsageDate")
    public java.time.ZonedDateTime getUsageDate() {
        return this.UsageDate;
    }

    @JsonProperty("UsageDate")
    public void setUsageDate(java.time.ZonedDateTime UsageDate) {
        this.UsageDate = UsageDate;
    }

    // MasterLabel
    private String MasterLabel;

    @JsonProperty("MasterLabel")
    public String getMasterLabel() {
        return this.MasterLabel;
    }

    @JsonProperty("MasterLabel")
    public void setMasterLabel(String MasterLabel) {
        this.MasterLabel = MasterLabel;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Tenant Usage Entitlement ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("ResourceGroupKey", "Resource Group Key", "string", "xsd:string", 120, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("Setting", "Setting", "string", "xsd:string", 120, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("StartDate", "Start Date", "date", "xsd:date", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("EndDate", "End Date", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("CurrentAmountAllowed", "Current Amount Allowed", "double", "xsd:double", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("Frequency", "Frequency", "picklist", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("IsPersistentResource", "Is Persistent Resource", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("HasRollover", "Has Rollover", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("OverageGrace", "Overage Grace", "percent", "xsd:double", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("AmountUsed", "Amount Used", "double", "xsd:double", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("UsageDate", "Usage Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("MasterLabel", "Setting Label", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField19);

        description.setLabelPlural("Tenant Usage Entitlements");
        description.setLabel("Tenant Usage Entitlement");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/TenantUsageEntitlement/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/TenantUsageEntitlement");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/TenantUsageEntitlement/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("TenantUsageEntitlement");

        return description;
    }
}
