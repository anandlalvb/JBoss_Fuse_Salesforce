/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import javax.annotation.Generated;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Salesforce Enumeration DTO for picklist Type
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
public enum RecentlyViewed_TypeEnum {

    // Account
    ACCOUNT("Account"),
    // Asset
    ASSET("Asset"),
    // Campaign
    CAMPAIGN("Campaign"),
    // Case
    CASE("Case"),
    // CollaborationGroup
    COLLABORATIONGROUP("CollaborationGroup"),
    // Contact
    CONTACT("Contact"),
    // ContentDocument
    CONTENTDOCUMENT("ContentDocument"),
    // Contract
    CONTRACT("Contract"),
    // DandBCompany
    DANDBCOMPANY("DandBCompany"),
    // Dashboard
    DASHBOARD("Dashboard"),
    // Document
    DOCUMENT("Document"),
    // DuplicateRecordSet
    DUPLICATERECORDSET("DuplicateRecordSet"),
    // Idea
    IDEA("Idea"),
    // Lead
    LEAD("Lead"),
    // ListView
    LISTVIEW("ListView"),
    // Macro
    MACRO("Macro"),
    // Opportunity
    OPPORTUNITY("Opportunity"),
    // Order
    ORDER("Order"),
    // Pricebook2
    PRICEBOOK2("Pricebook2"),
    // PricebookEntry
    PRICEBOOKENTRY("PricebookEntry"),
    // Product2
    PRODUCT2("Product2"),
    // Profile
    PROFILE("Profile"),
    // QuickText
    QUICKTEXT("QuickText"),
    // Report
    REPORT("Report"),
    // Solution
    SOLUTION("Solution"),
    // StreamingChannel
    STREAMINGCHANNEL("StreamingChannel"),
    // Task
    TASK("Task"),
    // Topic
    TOPIC("Topic"),
    // User
    USER("User");

    final String value;

    private RecentlyViewed_TypeEnum(String value) {
        this.value = value;
    }

    @JsonValue
    public String value() {
        return this.value;
    }

    @JsonCreator
    public static RecentlyViewed_TypeEnum fromValue(String value) {
        for (RecentlyViewed_TypeEnum e : RecentlyViewed_TypeEnum.values()) {
            if (e.value.equals(value)) {
                return e;
            }
        }
        throw new IllegalArgumentException(value);
    }

}
