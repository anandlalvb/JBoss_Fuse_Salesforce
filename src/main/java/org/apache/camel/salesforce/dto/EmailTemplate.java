/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject EmailTemplate
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("EmailTemplate")
public class EmailTemplate extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // DeveloperName
    private String DeveloperName;

    @JsonProperty("DeveloperName")
    public String getDeveloperName() {
        return this.DeveloperName;
    }

    @JsonProperty("DeveloperName")
    public void setDeveloperName(String DeveloperName) {
        this.DeveloperName = DeveloperName;
    }

    // NamespacePrefix
    private String NamespacePrefix;

    @JsonProperty("NamespacePrefix")
    public String getNamespacePrefix() {
        return this.NamespacePrefix;
    }

    @JsonProperty("NamespacePrefix")
    public void setNamespacePrefix(String NamespacePrefix) {
        this.NamespacePrefix = NamespacePrefix;
    }

    // FolderId
    private String FolderId;

    @JsonProperty("FolderId")
    public String getFolderId() {
        return this.FolderId;
    }

    @JsonProperty("FolderId")
    public void setFolderId(String FolderId) {
        this.FolderId = FolderId;
    }

    // BrandTemplateId
    private String BrandTemplateId;

    @JsonProperty("BrandTemplateId")
    public String getBrandTemplateId() {
        return this.BrandTemplateId;
    }

    @JsonProperty("BrandTemplateId")
    public void setBrandTemplateId(String BrandTemplateId) {
        this.BrandTemplateId = BrandTemplateId;
    }

    // TemplateStyle
    @XStreamConverter(PicklistEnumConverter.class)
    private EmailTemplate_TemplateStyleEnum TemplateStyle;

    @JsonProperty("TemplateStyle")
    public EmailTemplate_TemplateStyleEnum getTemplateStyle() {
        return this.TemplateStyle;
    }

    @JsonProperty("TemplateStyle")
    public void setTemplateStyle(EmailTemplate_TemplateStyleEnum TemplateStyle) {
        this.TemplateStyle = TemplateStyle;
    }

    // IsActive
    private Boolean IsActive;

    @JsonProperty("IsActive")
    public Boolean getIsActive() {
        return this.IsActive;
    }

    @JsonProperty("IsActive")
    public void setIsActive(Boolean IsActive) {
        this.IsActive = IsActive;
    }

    // TemplateType
    @XStreamConverter(PicklistEnumConverter.class)
    private EmailTemplate_TemplateTypeEnum TemplateType;

    @JsonProperty("TemplateType")
    public EmailTemplate_TemplateTypeEnum getTemplateType() {
        return this.TemplateType;
    }

    @JsonProperty("TemplateType")
    public void setTemplateType(EmailTemplate_TemplateTypeEnum TemplateType) {
        this.TemplateType = TemplateType;
    }

    // Encoding
    @XStreamConverter(PicklistEnumConverter.class)
    private EmailTemplate_EncodingEnum Encoding;

    @JsonProperty("Encoding")
    public EmailTemplate_EncodingEnum getEncoding() {
        return this.Encoding;
    }

    @JsonProperty("Encoding")
    public void setEncoding(EmailTemplate_EncodingEnum Encoding) {
        this.Encoding = Encoding;
    }

    // Description
    private String Description;

    @JsonProperty("Description")
    public String getDescription() {
        return this.Description;
    }

    @JsonProperty("Description")
    public void setDescription(String Description) {
        this.Description = Description;
    }

    // Subject
    private String Subject;

    @JsonProperty("Subject")
    public String getSubject() {
        return this.Subject;
    }

    @JsonProperty("Subject")
    public void setSubject(String Subject) {
        this.Subject = Subject;
    }

    // HtmlValue
    private String HtmlValue;

    @JsonProperty("HtmlValue")
    public String getHtmlValue() {
        return this.HtmlValue;
    }

    @JsonProperty("HtmlValue")
    public void setHtmlValue(String HtmlValue) {
        this.HtmlValue = HtmlValue;
    }

    // Body
    private String Body;

    @JsonProperty("Body")
    public String getBody() {
        return this.Body;
    }

    @JsonProperty("Body")
    public void setBody(String Body) {
        this.Body = Body;
    }

    // TimesUsed
    private Integer TimesUsed;

    @JsonProperty("TimesUsed")
    public Integer getTimesUsed() {
        return this.TimesUsed;
    }

    @JsonProperty("TimesUsed")
    public void setTimesUsed(Integer TimesUsed) {
        this.TimesUsed = TimesUsed;
    }

    // LastUsedDate
    private java.time.ZonedDateTime LastUsedDate;

    @JsonProperty("LastUsedDate")
    public java.time.ZonedDateTime getLastUsedDate() {
        return this.LastUsedDate;
    }

    @JsonProperty("LastUsedDate")
    public void setLastUsedDate(java.time.ZonedDateTime LastUsedDate) {
        this.LastUsedDate = LastUsedDate;
    }

    // ApiVersion
    private Double ApiVersion;

    @JsonProperty("ApiVersion")
    public Double getApiVersion() {
        return this.ApiVersion;
    }

    @JsonProperty("ApiVersion")
    public void setApiVersion(Double ApiVersion) {
        this.ApiVersion = ApiVersion;
    }

    // Markup
    private String Markup;

    @JsonProperty("Markup")
    public String getMarkup() {
        return this.Markup;
    }

    @JsonProperty("Markup")
    public void setMarkup(String Markup) {
        this.Markup = Markup;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Email Template ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("Name", "Email Template Name", "string", "xsd:string", 80, false, false, true, false, false, false, true);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("DeveloperName", "Template Unique Name", "string", "xsd:string", 80, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("NamespacePrefix", "Namespace Prefix", "string", "xsd:string", 15, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("OwnerId", "Owner ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("FolderId", "Folder ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("BrandTemplateId", "Letterhead ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("TemplateStyle", "Style", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("IsActive", "Available For Use", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("TemplateType", "Template Type", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("Encoding", "Encoding", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("Description", "Description", "string", "xsd:string", 4000, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("Subject", "Subject", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("HtmlValue", "HTML Value", "textarea", "xsd:string", 384000, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("Body", "Email Body", "textarea", "xsd:string", 384000, false, true, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("TimesUsed", "Times Used", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("LastUsedDate", "Last Used Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField20);
        final SObjectField sObjectField21 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField21);
        final SObjectField sObjectField22 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField22);
        final SObjectField sObjectField23 = createField("ApiVersion", "API Version", "double", "xsd:double", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField23);
        final SObjectField sObjectField24 = createField("Markup", "Markup", "textarea", "xsd:string", 1048576, false, true, false, false, false, false, false);
        fields1.add(sObjectField24);

        description.setLabelPlural("Email Templates");
        description.setLabel("Email Template");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/EmailTemplate/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/EmailTemplate");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/EmailTemplate/{ID}");
        sObjectDescriptionUrls1.setCompactLayouts("/services/data/v34.0/sobjects/EmailTemplate/describe/compactLayouts");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("EmailTemplate");

        return description;
    }
}
