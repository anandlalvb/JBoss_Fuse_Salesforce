/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject PackageLicense
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("PackageLicense")
public class PackageLicense extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // Status
    @XStreamConverter(PicklistEnumConverter.class)
    private PackageLicense_StatusEnum Status;

    @JsonProperty("Status")
    public PackageLicense_StatusEnum getStatus() {
        return this.Status;
    }

    @JsonProperty("Status")
    public void setStatus(PackageLicense_StatusEnum Status) {
        this.Status = Status;
    }

    // IsProvisioned
    private Boolean IsProvisioned;

    @JsonProperty("IsProvisioned")
    public Boolean getIsProvisioned() {
        return this.IsProvisioned;
    }

    @JsonProperty("IsProvisioned")
    public void setIsProvisioned(Boolean IsProvisioned) {
        this.IsProvisioned = IsProvisioned;
    }

    // AllowedLicenses
    private Integer AllowedLicenses;

    @JsonProperty("AllowedLicenses")
    public Integer getAllowedLicenses() {
        return this.AllowedLicenses;
    }

    @JsonProperty("AllowedLicenses")
    public void setAllowedLicenses(Integer AllowedLicenses) {
        this.AllowedLicenses = AllowedLicenses;
    }

    // UsedLicenses
    private Integer UsedLicenses;

    @JsonProperty("UsedLicenses")
    public Integer getUsedLicenses() {
        return this.UsedLicenses;
    }

    @JsonProperty("UsedLicenses")
    public void setUsedLicenses(Integer UsedLicenses) {
        this.UsedLicenses = UsedLicenses;
    }

    // ExpirationDate
    private java.time.ZonedDateTime ExpirationDate;

    @JsonProperty("ExpirationDate")
    public java.time.ZonedDateTime getExpirationDate() {
        return this.ExpirationDate;
    }

    @JsonProperty("ExpirationDate")
    public void setExpirationDate(java.time.ZonedDateTime ExpirationDate) {
        this.ExpirationDate = ExpirationDate;
    }

    // NamespacePrefix
    private String NamespacePrefix;

    @JsonProperty("NamespacePrefix")
    public String getNamespacePrefix() {
        return this.NamespacePrefix;
    }

    @JsonProperty("NamespacePrefix")
    public void setNamespacePrefix(String NamespacePrefix) {
        this.NamespacePrefix = NamespacePrefix;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Package License ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("Status", "Status", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("IsProvisioned", "Is Provisioned", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("AllowedLicenses", "Allowed Licenses", "int", "xsd:int", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("UsedLicenses", "Used Licenses", "int", "xsd:int", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("ExpirationDate", "Expiration Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("NamespacePrefix", "Namespace Prefix", "string", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);

        description.setLabelPlural("Package License");
        description.setLabel("Package License");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/PackageLicense/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/PackageLicense");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/PackageLicense/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("PackageLicense");

        return description;
    }
}
