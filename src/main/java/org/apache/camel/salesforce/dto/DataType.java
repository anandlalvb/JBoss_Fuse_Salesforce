/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject DataType
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("DataType")
public class DataType extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // DurableId
    private String DurableId;

    @JsonProperty("DurableId")
    public String getDurableId() {
        return this.DurableId;
    }

    @JsonProperty("DurableId")
    public void setDurableId(String DurableId) {
        this.DurableId = DurableId;
    }

    // DeveloperName
    private String DeveloperName;

    @JsonProperty("DeveloperName")
    public String getDeveloperName() {
        return this.DeveloperName;
    }

    @JsonProperty("DeveloperName")
    public void setDeveloperName(String DeveloperName) {
        this.DeveloperName = DeveloperName;
    }

    // IsComplex
    private Boolean IsComplex;

    @JsonProperty("IsComplex")
    public Boolean getIsComplex() {
        return this.IsComplex;
    }

    @JsonProperty("IsComplex")
    public void setIsComplex(Boolean IsComplex) {
        this.IsComplex = IsComplex;
    }

    // ContextServiceDataTypeId
    private String ContextServiceDataTypeId;

    @JsonProperty("ContextServiceDataTypeId")
    public String getContextServiceDataTypeId() {
        return this.ContextServiceDataTypeId;
    }

    @JsonProperty("ContextServiceDataTypeId")
    public void setContextServiceDataTypeId(String ContextServiceDataTypeId) {
        this.ContextServiceDataTypeId = ContextServiceDataTypeId;
    }

    // ContextWsdlDataTypeId
    private String ContextWsdlDataTypeId;

    @JsonProperty("ContextWsdlDataTypeId")
    public String getContextWsdlDataTypeId() {
        return this.ContextWsdlDataTypeId;
    }

    @JsonProperty("ContextWsdlDataTypeId")
    public void setContextWsdlDataTypeId(String ContextWsdlDataTypeId) {
        this.ContextWsdlDataTypeId = ContextWsdlDataTypeId;
    }

    // ServiceId
    private String ServiceId;

    @JsonProperty("ServiceId")
    public String getServiceId() {
        return this.ServiceId;
    }

    @JsonProperty("ServiceId")
    public void setServiceId(String ServiceId) {
        this.ServiceId = ServiceId;
    }

    // Namespace
    private String Namespace;

    @JsonProperty("Namespace")
    public String getNamespace() {
        return this.Namespace;
    }

    @JsonProperty("Namespace")
    public void setNamespace(String Namespace) {
        this.Namespace = Namespace;
    }

    // NamespacePrefix
    private String NamespacePrefix;

    @JsonProperty("NamespacePrefix")
    public String getNamespacePrefix() {
        return this.NamespacePrefix;
    }

    @JsonProperty("NamespacePrefix")
    public void setNamespacePrefix(String NamespacePrefix) {
        this.NamespacePrefix = NamespacePrefix;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Data Type ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("DurableId", "Data Type Durable ID", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("DeveloperName", "Data Type Name", "string", "xsd:string", 70, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("IsComplex", "Is this Data Type Complex?", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("ContextServiceDataTypeId", "Service Data Type ID", "string", "xsd:string", 70, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("ContextWsdlDataTypeId", "WSDL Data Type ID", "string", "xsd:string", 70, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("Name", "Data Type Name", "string", "xsd:string", 70, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("ServiceId", "Service ID", "string", "xsd:string", 70, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("Namespace", "XML namespace for this Data Type in the current Service Version and Web Service Definition", "string", "xsd:string", 70, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("NamespacePrefix", "XML namespace prefix for this Data Type in the context Service Version and Web Service Definition", "string", "xsd:string", 3, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);

        description.setLabelPlural("Data Types");
        description.setLabel("Data Type");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/DataType/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/DataType");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/DataType/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("DataType");

        return description;
    }
}
