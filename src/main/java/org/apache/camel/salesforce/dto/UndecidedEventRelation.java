/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject UndecidedEventRelation
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("UndecidedEventRelation")
public class UndecidedEventRelation extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // RelationId
    private String RelationId;

    @JsonProperty("RelationId")
    public String getRelationId() {
        return this.RelationId;
    }

    @JsonProperty("RelationId")
    public void setRelationId(String RelationId) {
        this.RelationId = RelationId;
    }

    // EventId
    private String EventId;

    @JsonProperty("EventId")
    public String getEventId() {
        return this.EventId;
    }

    @JsonProperty("EventId")
    public void setEventId(String EventId) {
        this.EventId = EventId;
    }

    // RespondedDate
    private java.time.ZonedDateTime RespondedDate;

    @JsonProperty("RespondedDate")
    public java.time.ZonedDateTime getRespondedDate() {
        return this.RespondedDate;
    }

    @JsonProperty("RespondedDate")
    public void setRespondedDate(java.time.ZonedDateTime RespondedDate) {
        this.RespondedDate = RespondedDate;
    }

    // Response
    private String Response;

    @JsonProperty("Response")
    public String getResponse() {
        return this.Response;
    }

    @JsonProperty("Response")
    public void setResponse(String Response) {
        this.Response = Response;
    }

    // Type
    private String Type;

    @JsonProperty("Type")
    public String getType() {
        return this.Type;
    }

    @JsonProperty("Type")
    public void setType(String Type) {
        this.Type = Type;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Event Relation ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("RelationId", "Relation ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("EventId", "Event ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("RespondedDate", "Response Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("Response", "Response", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("Type", "Type", "string", "xsd:string", 50, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);

        description.setLabelPlural("Undecided Event Relations");
        description.setLabel("Undecided Event Relation");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/UndecidedEventRelation/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/UndecidedEventRelation");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/UndecidedEventRelation/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("UndecidedEventRelation");

        return description;
    }
}
