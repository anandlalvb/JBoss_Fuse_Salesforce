/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject PushTopic
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("PushTopic")
public class PushTopic extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // Query
    private String Query;

    @JsonProperty("Query")
    public String getQuery() {
        return this.Query;
    }

    @JsonProperty("Query")
    public void setQuery(String Query) {
        this.Query = Query;
    }

    // ApiVersion
    private Double ApiVersion;

    @JsonProperty("ApiVersion")
    public Double getApiVersion() {
        return this.ApiVersion;
    }

    @JsonProperty("ApiVersion")
    public void setApiVersion(Double ApiVersion) {
        this.ApiVersion = ApiVersion;
    }

    // IsActive
    private Boolean IsActive;

    @JsonProperty("IsActive")
    public Boolean getIsActive() {
        return this.IsActive;
    }

    @JsonProperty("IsActive")
    public void setIsActive(Boolean IsActive) {
        this.IsActive = IsActive;
    }

    // NotifyForFields
    @XStreamConverter(PicklistEnumConverter.class)
    private PushTopic_NotifyForFieldsEnum NotifyForFields;

    @JsonProperty("NotifyForFields")
    public PushTopic_NotifyForFieldsEnum getNotifyForFields() {
        return this.NotifyForFields;
    }

    @JsonProperty("NotifyForFields")
    public void setNotifyForFields(PushTopic_NotifyForFieldsEnum NotifyForFields) {
        this.NotifyForFields = NotifyForFields;
    }

    // NotifyForOperations
    @XStreamConverter(PicklistEnumConverter.class)
    private PushTopic_NotifyForOperationsEnum NotifyForOperations;

    @JsonProperty("NotifyForOperations")
    public PushTopic_NotifyForOperationsEnum getNotifyForOperations() {
        return this.NotifyForOperations;
    }

    @JsonProperty("NotifyForOperations")
    public void setNotifyForOperations(PushTopic_NotifyForOperationsEnum NotifyForOperations) {
        this.NotifyForOperations = NotifyForOperations;
    }

    // Description
    private String Description;

    @JsonProperty("Description")
    public String getDescription() {
        return this.Description;
    }

    @JsonProperty("Description")
    public void setDescription(String Description) {
        this.Description = Description;
    }

    // NotifyForOperationCreate
    private Boolean NotifyForOperationCreate;

    @JsonProperty("NotifyForOperationCreate")
    public Boolean getNotifyForOperationCreate() {
        return this.NotifyForOperationCreate;
    }

    @JsonProperty("NotifyForOperationCreate")
    public void setNotifyForOperationCreate(Boolean NotifyForOperationCreate) {
        this.NotifyForOperationCreate = NotifyForOperationCreate;
    }

    // NotifyForOperationUpdate
    private Boolean NotifyForOperationUpdate;

    @JsonProperty("NotifyForOperationUpdate")
    public Boolean getNotifyForOperationUpdate() {
        return this.NotifyForOperationUpdate;
    }

    @JsonProperty("NotifyForOperationUpdate")
    public void setNotifyForOperationUpdate(Boolean NotifyForOperationUpdate) {
        this.NotifyForOperationUpdate = NotifyForOperationUpdate;
    }

    // NotifyForOperationDelete
    private Boolean NotifyForOperationDelete;

    @JsonProperty("NotifyForOperationDelete")
    public Boolean getNotifyForOperationDelete() {
        return this.NotifyForOperationDelete;
    }

    @JsonProperty("NotifyForOperationDelete")
    public void setNotifyForOperationDelete(Boolean NotifyForOperationDelete) {
        this.NotifyForOperationDelete = NotifyForOperationDelete;
    }

    // NotifyForOperationUndelete
    private Boolean NotifyForOperationUndelete;

    @JsonProperty("NotifyForOperationUndelete")
    public Boolean getNotifyForOperationUndelete() {
        return this.NotifyForOperationUndelete;
    }

    @JsonProperty("NotifyForOperationUndelete")
    public void setNotifyForOperationUndelete(Boolean NotifyForOperationUndelete) {
        this.NotifyForOperationUndelete = NotifyForOperationUndelete;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Push Topic ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("Name", "Topic Name", "string", "xsd:string", 25, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("Query", "SOQL Query", "string", "xsd:string", 1300, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("ApiVersion", "API Version", "double", "xsd:double", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("IsActive", "Is Active", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("NotifyForFields", "Notify For Fields", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("NotifyForOperations", "Notify For Operations", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("Description", "Description", "string", "xsd:string", 400, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("NotifyForOperationCreate", "Create", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("NotifyForOperationUpdate", "Update", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("NotifyForOperationDelete", "Delete", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("NotifyForOperationUndelete", "Undelete", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField18);

        description.setLabelPlural("Push Topics");
        description.setLabel("Push Topic");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/PushTopic/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/PushTopic");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/PushTopic/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("PushTopic");

        return description;
    }
}
