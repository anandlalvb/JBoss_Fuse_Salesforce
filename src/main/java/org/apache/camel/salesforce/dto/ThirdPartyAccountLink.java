/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject ThirdPartyAccountLink
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("ThirdPartyAccountLink")
public class ThirdPartyAccountLink extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // ThirdPartyAccountLinkKey
    private String ThirdPartyAccountLinkKey;

    @JsonProperty("ThirdPartyAccountLinkKey")
    public String getThirdPartyAccountLinkKey() {
        return this.ThirdPartyAccountLinkKey;
    }

    @JsonProperty("ThirdPartyAccountLinkKey")
    public void setThirdPartyAccountLinkKey(String ThirdPartyAccountLinkKey) {
        this.ThirdPartyAccountLinkKey = ThirdPartyAccountLinkKey;
    }

    // UserId
    private String UserId;

    @JsonProperty("UserId")
    public String getUserId() {
        return this.UserId;
    }

    @JsonProperty("UserId")
    public void setUserId(String UserId) {
        this.UserId = UserId;
    }

    // SsoProviderId
    private String SsoProviderId;

    @JsonProperty("SsoProviderId")
    public String getSsoProviderId() {
        return this.SsoProviderId;
    }

    @JsonProperty("SsoProviderId")
    public void setSsoProviderId(String SsoProviderId) {
        this.SsoProviderId = SsoProviderId;
    }

    // Handle
    private String Handle;

    @JsonProperty("Handle")
    public String getHandle() {
        return this.Handle;
    }

    @JsonProperty("Handle")
    public void setHandle(String Handle) {
        this.Handle = Handle;
    }

    // RemoteIdentifier
    private String RemoteIdentifier;

    @JsonProperty("RemoteIdentifier")
    public String getRemoteIdentifier() {
        return this.RemoteIdentifier;
    }

    @JsonProperty("RemoteIdentifier")
    public void setRemoteIdentifier(String RemoteIdentifier) {
        this.RemoteIdentifier = RemoteIdentifier;
    }

    // Provider
    private String Provider;

    @JsonProperty("Provider")
    public String getProvider() {
        return this.Provider;
    }

    @JsonProperty("Provider")
    public void setProvider(String Provider) {
        this.Provider = Provider;
    }

    // SsoProviderName
    private String SsoProviderName;

    @JsonProperty("SsoProviderName")
    public String getSsoProviderName() {
        return this.SsoProviderName;
    }

    @JsonProperty("SsoProviderName")
    public void setSsoProviderName(String SsoProviderName) {
        this.SsoProviderName = SsoProviderName;
    }

    // IsNotSsoUsable
    private Boolean IsNotSsoUsable;

    @JsonProperty("IsNotSsoUsable")
    public Boolean getIsNotSsoUsable() {
        return this.IsNotSsoUsable;
    }

    @JsonProperty("IsNotSsoUsable")
    public void setIsNotSsoUsable(Boolean IsNotSsoUsable) {
        this.IsNotSsoUsable = IsNotSsoUsable;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Third Party Account Link ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("ThirdPartyAccountLinkKey", "Third Party Account Link Unique Key", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("UserId", "User ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("SsoProviderId", "Auth. Provider ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("Handle", "External User Handle", "string", "xsd:string", 375, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("RemoteIdentifier", "External User Id", "string", "xsd:string", 128, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("Provider", "Provider", "string", "xsd:string", 128, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("SsoProviderName", "Single Sign-On Provider Name", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("IsNotSsoUsable", "Is Not SSO Usable", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);

        description.setLabelPlural("Third Party Account Links");
        description.setLabel("Third Party Account Link");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/ThirdPartyAccountLink/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/ThirdPartyAccountLink");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/ThirdPartyAccountLink/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("ThirdPartyAccountLink");

        return description;
    }
}
