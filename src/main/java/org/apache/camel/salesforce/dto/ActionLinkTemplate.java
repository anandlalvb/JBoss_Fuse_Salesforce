/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject ActionLinkTemplate
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("ActionLinkTemplate")
public class ActionLinkTemplate extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // ActionLinkGroupTemplateId
    private String ActionLinkGroupTemplateId;

    @JsonProperty("ActionLinkGroupTemplateId")
    public String getActionLinkGroupTemplateId() {
        return this.ActionLinkGroupTemplateId;
    }

    @JsonProperty("ActionLinkGroupTemplateId")
    public void setActionLinkGroupTemplateId(String ActionLinkGroupTemplateId) {
        this.ActionLinkGroupTemplateId = ActionLinkGroupTemplateId;
    }

    // LabelKey
    private String LabelKey;

    @JsonProperty("LabelKey")
    public String getLabelKey() {
        return this.LabelKey;
    }

    @JsonProperty("LabelKey")
    public void setLabelKey(String LabelKey) {
        this.LabelKey = LabelKey;
    }

    // Method
    @XStreamConverter(PicklistEnumConverter.class)
    private ActionLinkTemplate_MethodEnum Method;

    @JsonProperty("Method")
    public ActionLinkTemplate_MethodEnum getMethod() {
        return this.Method;
    }

    @JsonProperty("Method")
    public void setMethod(ActionLinkTemplate_MethodEnum Method) {
        this.Method = Method;
    }

    // LinkType
    @XStreamConverter(PicklistEnumConverter.class)
    private ActionLinkTemplate_LinkTypeEnum LinkType;

    @JsonProperty("LinkType")
    public ActionLinkTemplate_LinkTypeEnum getLinkType() {
        return this.LinkType;
    }

    @JsonProperty("LinkType")
    public void setLinkType(ActionLinkTemplate_LinkTypeEnum LinkType) {
        this.LinkType = LinkType;
    }

    // Position
    private Integer Position;

    @JsonProperty("Position")
    public Integer getPosition() {
        return this.Position;
    }

    @JsonProperty("Position")
    public void setPosition(Integer Position) {
        this.Position = Position;
    }

    // IsConfirmationRequired
    private Boolean IsConfirmationRequired;

    @JsonProperty("IsConfirmationRequired")
    public Boolean getIsConfirmationRequired() {
        return this.IsConfirmationRequired;
    }

    @JsonProperty("IsConfirmationRequired")
    public void setIsConfirmationRequired(Boolean IsConfirmationRequired) {
        this.IsConfirmationRequired = IsConfirmationRequired;
    }

    // IsGroupDefault
    private Boolean IsGroupDefault;

    @JsonProperty("IsGroupDefault")
    public Boolean getIsGroupDefault() {
        return this.IsGroupDefault;
    }

    @JsonProperty("IsGroupDefault")
    public void setIsGroupDefault(Boolean IsGroupDefault) {
        this.IsGroupDefault = IsGroupDefault;
    }

    // UserVisibility
    @XStreamConverter(PicklistEnumConverter.class)
    private ActionLinkTemplate_UserVisibilityEnum UserVisibility;

    @JsonProperty("UserVisibility")
    public ActionLinkTemplate_UserVisibilityEnum getUserVisibility() {
        return this.UserVisibility;
    }

    @JsonProperty("UserVisibility")
    public void setUserVisibility(ActionLinkTemplate_UserVisibilityEnum UserVisibility) {
        this.UserVisibility = UserVisibility;
    }

    // UserAlias
    private String UserAlias;

    @JsonProperty("UserAlias")
    public String getUserAlias() {
        return this.UserAlias;
    }

    @JsonProperty("UserAlias")
    public void setUserAlias(String UserAlias) {
        this.UserAlias = UserAlias;
    }

    // Label
    private String Label;

    @JsonProperty("Label")
    public String getLabel() {
        return this.Label;
    }

    @JsonProperty("Label")
    public void setLabel(String Label) {
        this.Label = Label;
    }

    // ActionUrl
    private String ActionUrl;

    @JsonProperty("ActionUrl")
    public String getActionUrl() {
        return this.ActionUrl;
    }

    @JsonProperty("ActionUrl")
    public void setActionUrl(String ActionUrl) {
        this.ActionUrl = ActionUrl;
    }

    // RequestBody
    private String RequestBody;

    @JsonProperty("RequestBody")
    public String getRequestBody() {
        return this.RequestBody;
    }

    @JsonProperty("RequestBody")
    public void setRequestBody(String RequestBody) {
        this.RequestBody = RequestBody;
    }

    // Headers
    private String Headers;

    @JsonProperty("Headers")
    public String getHeaders() {
        return this.Headers;
    }

    @JsonProperty("Headers")
    public void setHeaders(String Headers) {
        this.Headers = Headers;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Action Link Template ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("ActionLinkGroupTemplateId", "Action Link Group Template ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("LabelKey", "Label Key", "string", "xsd:string", 128, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("Method", "HTTP Method", "picklist", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("LinkType", "Action Type", "picklist", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("Position", "Position", "int", "xsd:int", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("IsConfirmationRequired", "Confirmation Required", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("IsGroupDefault", "Default Link in Group", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("UserVisibility", "User Visibility", "picklist", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("UserAlias", "Custom User Alias", "string", "xsd:string", 128, false, true, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("Label", "Label", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("ActionUrl", "Action URL", "textarea", "xsd:string", 32000, false, false, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("RequestBody", "HTTP Request Body", "textarea", "xsd:string", 32000, false, true, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("Headers", "HTTP Headers", "textarea", "xsd:string", 32000, false, true, false, false, false, false, false);
        fields1.add(sObjectField20);

        description.setLabelPlural("Action Link Templates");
        description.setLabel("Action Link Template");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/ActionLinkTemplate/describe");
        sObjectDescriptionUrls1.setLayouts("/services/data/v34.0/sobjects/ActionLinkTemplate/describe/layouts");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/ActionLinkTemplate");
        sObjectDescriptionUrls1.setUiEditTemplate("https://na57.salesforce.com/{ID}/e");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/ActionLinkTemplate/{ID}");
        sObjectDescriptionUrls1.setCompactLayouts("/services/data/v34.0/sobjects/ActionLinkTemplate/describe/compactLayouts");
        sObjectDescriptionUrls1.setUiNewRecord("https://na57.salesforce.com/07l/e");
        sObjectDescriptionUrls1.setUiDetailTemplate("https://na57.salesforce.com/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("ActionLinkTemplate");

        return description;
    }
}
