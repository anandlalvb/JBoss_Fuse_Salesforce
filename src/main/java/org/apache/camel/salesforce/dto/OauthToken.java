/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject OauthToken
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("OauthToken")
public class OauthToken extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // AccessToken
    private String AccessToken;

    @JsonProperty("AccessToken")
    public String getAccessToken() {
        return this.AccessToken;
    }

    @JsonProperty("AccessToken")
    public void setAccessToken(String AccessToken) {
        this.AccessToken = AccessToken;
    }

    // UserId
    private String UserId;

    @JsonProperty("UserId")
    public String getUserId() {
        return this.UserId;
    }

    @JsonProperty("UserId")
    public void setUserId(String UserId) {
        this.UserId = UserId;
    }

    // RequestToken
    private String RequestToken;

    @JsonProperty("RequestToken")
    public String getRequestToken() {
        return this.RequestToken;
    }

    @JsonProperty("RequestToken")
    public void setRequestToken(String RequestToken) {
        this.RequestToken = RequestToken;
    }

    // AppName
    private String AppName;

    @JsonProperty("AppName")
    public String getAppName() {
        return this.AppName;
    }

    @JsonProperty("AppName")
    public void setAppName(String AppName) {
        this.AppName = AppName;
    }

    // LastUsedDate
    private java.time.ZonedDateTime LastUsedDate;

    @JsonProperty("LastUsedDate")
    public java.time.ZonedDateTime getLastUsedDate() {
        return this.LastUsedDate;
    }

    @JsonProperty("LastUsedDate")
    public void setLastUsedDate(java.time.ZonedDateTime LastUsedDate) {
        this.LastUsedDate = LastUsedDate;
    }

    // UseCount
    private Integer UseCount;

    @JsonProperty("UseCount")
    public Integer getUseCount() {
        return this.UseCount;
    }

    @JsonProperty("UseCount")
    public void setUseCount(Integer UseCount) {
        this.UseCount = UseCount;
    }

    // DeleteToken
    private String DeleteToken;

    @JsonProperty("DeleteToken")
    public String getDeleteToken() {
        return this.DeleteToken;
    }

    @JsonProperty("DeleteToken")
    public void setDeleteToken(String DeleteToken) {
        this.DeleteToken = DeleteToken;
    }

    // AppMenuItemId
    private String AppMenuItemId;

    @JsonProperty("AppMenuItemId")
    public String getAppMenuItemId() {
        return this.AppMenuItemId;
    }

    @JsonProperty("AppMenuItemId")
    public void setAppMenuItemId(String AppMenuItemId) {
        this.AppMenuItemId = AppMenuItemId;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Oauth Token ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("AccessToken", "Access Token", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("UserId", "User ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("RequestToken", "Request Token", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("AppName", "Application Name", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("LastUsedDate", "Last Used Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("UseCount", "Use Count", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("DeleteToken", "Delete Token", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("AppMenuItemId", "AppMenuItem ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);

        description.setLabelPlural("Oauth Tokens");
        description.setLabel("Oauth Token");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/OauthToken/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/OauthToken");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/OauthToken/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("OauthToken");

        return description;
    }
}
