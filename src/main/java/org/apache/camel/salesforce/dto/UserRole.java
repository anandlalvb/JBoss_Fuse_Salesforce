/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject UserRole
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("UserRole")
public class UserRole extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // ParentRoleId
    private String ParentRoleId;

    @JsonProperty("ParentRoleId")
    public String getParentRoleId() {
        return this.ParentRoleId;
    }

    @JsonProperty("ParentRoleId")
    public void setParentRoleId(String ParentRoleId) {
        this.ParentRoleId = ParentRoleId;
    }

    // RollupDescription
    private String RollupDescription;

    @JsonProperty("RollupDescription")
    public String getRollupDescription() {
        return this.RollupDescription;
    }

    @JsonProperty("RollupDescription")
    public void setRollupDescription(String RollupDescription) {
        this.RollupDescription = RollupDescription;
    }

    // OpportunityAccessForAccountOwner
    @XStreamConverter(PicklistEnumConverter.class)
    private UserRole_OpportunityAccessForAccountOwnerEnum OpportunityAccessForAccountOwner;

    @JsonProperty("OpportunityAccessForAccountOwner")
    public UserRole_OpportunityAccessForAccountOwnerEnum getOpportunityAccessForAccountOwner() {
        return this.OpportunityAccessForAccountOwner;
    }

    @JsonProperty("OpportunityAccessForAccountOwner")
    public void setOpportunityAccessForAccountOwner(UserRole_OpportunityAccessForAccountOwnerEnum OpportunityAccessForAccountOwner) {
        this.OpportunityAccessForAccountOwner = OpportunityAccessForAccountOwner;
    }

    // CaseAccessForAccountOwner
    @XStreamConverter(PicklistEnumConverter.class)
    private UserRole_CaseAccessForAccountOwnerEnum CaseAccessForAccountOwner;

    @JsonProperty("CaseAccessForAccountOwner")
    public UserRole_CaseAccessForAccountOwnerEnum getCaseAccessForAccountOwner() {
        return this.CaseAccessForAccountOwner;
    }

    @JsonProperty("CaseAccessForAccountOwner")
    public void setCaseAccessForAccountOwner(UserRole_CaseAccessForAccountOwnerEnum CaseAccessForAccountOwner) {
        this.CaseAccessForAccountOwner = CaseAccessForAccountOwner;
    }

    // ContactAccessForAccountOwner
    @XStreamConverter(PicklistEnumConverter.class)
    private UserRole_ContactAccessForAccountOwnerEnum ContactAccessForAccountOwner;

    @JsonProperty("ContactAccessForAccountOwner")
    public UserRole_ContactAccessForAccountOwnerEnum getContactAccessForAccountOwner() {
        return this.ContactAccessForAccountOwner;
    }

    @JsonProperty("ContactAccessForAccountOwner")
    public void setContactAccessForAccountOwner(UserRole_ContactAccessForAccountOwnerEnum ContactAccessForAccountOwner) {
        this.ContactAccessForAccountOwner = ContactAccessForAccountOwner;
    }

    // ForecastUserId
    private String ForecastUserId;

    @JsonProperty("ForecastUserId")
    public String getForecastUserId() {
        return this.ForecastUserId;
    }

    @JsonProperty("ForecastUserId")
    public void setForecastUserId(String ForecastUserId) {
        this.ForecastUserId = ForecastUserId;
    }

    // MayForecastManagerShare
    private Boolean MayForecastManagerShare;

    @JsonProperty("MayForecastManagerShare")
    public Boolean getMayForecastManagerShare() {
        return this.MayForecastManagerShare;
    }

    @JsonProperty("MayForecastManagerShare")
    public void setMayForecastManagerShare(Boolean MayForecastManagerShare) {
        this.MayForecastManagerShare = MayForecastManagerShare;
    }

    // DeveloperName
    private String DeveloperName;

    @JsonProperty("DeveloperName")
    public String getDeveloperName() {
        return this.DeveloperName;
    }

    @JsonProperty("DeveloperName")
    public void setDeveloperName(String DeveloperName) {
        this.DeveloperName = DeveloperName;
    }

    // PortalAccountId
    private String PortalAccountId;

    @JsonProperty("PortalAccountId")
    public String getPortalAccountId() {
        return this.PortalAccountId;
    }

    @JsonProperty("PortalAccountId")
    public void setPortalAccountId(String PortalAccountId) {
        this.PortalAccountId = PortalAccountId;
    }

    // PortalType
    @XStreamConverter(PicklistEnumConverter.class)
    private UserRole_PortalTypeEnum PortalType;

    @JsonProperty("PortalType")
    public UserRole_PortalTypeEnum getPortalType() {
        return this.PortalType;
    }

    @JsonProperty("PortalType")
    public void setPortalType(UserRole_PortalTypeEnum PortalType) {
        this.PortalType = PortalType;
    }

    // PortalAccountOwnerId
    private String PortalAccountOwnerId;

    @JsonProperty("PortalAccountOwnerId")
    public String getPortalAccountOwnerId() {
        return this.PortalAccountOwnerId;
    }

    @JsonProperty("PortalAccountOwnerId")
    public void setPortalAccountOwnerId(String PortalAccountOwnerId) {
        this.PortalAccountOwnerId = PortalAccountOwnerId;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Role ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("Name", "Name", "string", "xsd:string", 80, false, false, true, false, false, false, true);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("ParentRoleId", "Parent Role ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("RollupDescription", "Description", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("OpportunityAccessForAccountOwner", "Opportunity Access Level for Account Owner", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("CaseAccessForAccountOwner", "Case Access Level for Account Owner", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("ContactAccessForAccountOwner", "Contact Access Level for Account Owner", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("ForecastUserId", "User ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("MayForecastManagerShare", "May Forecast Manager Share", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("DeveloperName", "Developer Name", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("PortalAccountId", "Account ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("PortalType", "Portal Type", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("PortalAccountOwnerId", "User ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField16);

        description.setLabelPlural("Role");
        description.setLabel("Role");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/UserRole/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/UserRole");
        sObjectDescriptionUrls1.setUiEditTemplate("https://na57.salesforce.com/{ID}/e");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/UserRole/{ID}");
        sObjectDescriptionUrls1.setUiNewRecord("https://na57.salesforce.com/00E/e");
        sObjectDescriptionUrls1.setUiDetailTemplate("https://na57.salesforce.com/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("UserRole");

        return description;
    }
}
