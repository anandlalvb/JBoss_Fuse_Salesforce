/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject EntityDefinition
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("EntityDefinition")
public class EntityDefinition extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // DurableId
    private String DurableId;

    @JsonProperty("DurableId")
    public String getDurableId() {
        return this.DurableId;
    }

    @JsonProperty("DurableId")
    public void setDurableId(String DurableId) {
        this.DurableId = DurableId;
    }

    // QualifiedApiName
    private String QualifiedApiName;

    @JsonProperty("QualifiedApiName")
    public String getQualifiedApiName() {
        return this.QualifiedApiName;
    }

    @JsonProperty("QualifiedApiName")
    public void setQualifiedApiName(String QualifiedApiName) {
        this.QualifiedApiName = QualifiedApiName;
    }

    // NamespacePrefix
    private String NamespacePrefix;

    @JsonProperty("NamespacePrefix")
    public String getNamespacePrefix() {
        return this.NamespacePrefix;
    }

    @JsonProperty("NamespacePrefix")
    public void setNamespacePrefix(String NamespacePrefix) {
        this.NamespacePrefix = NamespacePrefix;
    }

    // DeveloperName
    private String DeveloperName;

    @JsonProperty("DeveloperName")
    public String getDeveloperName() {
        return this.DeveloperName;
    }

    @JsonProperty("DeveloperName")
    public void setDeveloperName(String DeveloperName) {
        this.DeveloperName = DeveloperName;
    }

    // MasterLabel
    private String MasterLabel;

    @JsonProperty("MasterLabel")
    public String getMasterLabel() {
        return this.MasterLabel;
    }

    @JsonProperty("MasterLabel")
    public void setMasterLabel(String MasterLabel) {
        this.MasterLabel = MasterLabel;
    }

    // Label
    private String Label;

    @JsonProperty("Label")
    public String getLabel() {
        return this.Label;
    }

    @JsonProperty("Label")
    public void setLabel(String Label) {
        this.Label = Label;
    }

    // PluralLabel
    private String PluralLabel;

    @JsonProperty("PluralLabel")
    public String getPluralLabel() {
        return this.PluralLabel;
    }

    @JsonProperty("PluralLabel")
    public void setPluralLabel(String PluralLabel) {
        this.PluralLabel = PluralLabel;
    }

    // DefaultCompactLayoutId
    private String DefaultCompactLayoutId;

    @JsonProperty("DefaultCompactLayoutId")
    public String getDefaultCompactLayoutId() {
        return this.DefaultCompactLayoutId;
    }

    @JsonProperty("DefaultCompactLayoutId")
    public void setDefaultCompactLayoutId(String DefaultCompactLayoutId) {
        this.DefaultCompactLayoutId = DefaultCompactLayoutId;
    }

    // IsCustomizable
    private Boolean IsCustomizable;

    @JsonProperty("IsCustomizable")
    public Boolean getIsCustomizable() {
        return this.IsCustomizable;
    }

    @JsonProperty("IsCustomizable")
    public void setIsCustomizable(Boolean IsCustomizable) {
        this.IsCustomizable = IsCustomizable;
    }

    // IsApexTriggerable
    private Boolean IsApexTriggerable;

    @JsonProperty("IsApexTriggerable")
    public Boolean getIsApexTriggerable() {
        return this.IsApexTriggerable;
    }

    @JsonProperty("IsApexTriggerable")
    public void setIsApexTriggerable(Boolean IsApexTriggerable) {
        this.IsApexTriggerable = IsApexTriggerable;
    }

    // IsWorkflowEnabled
    private Boolean IsWorkflowEnabled;

    @JsonProperty("IsWorkflowEnabled")
    public Boolean getIsWorkflowEnabled() {
        return this.IsWorkflowEnabled;
    }

    @JsonProperty("IsWorkflowEnabled")
    public void setIsWorkflowEnabled(Boolean IsWorkflowEnabled) {
        this.IsWorkflowEnabled = IsWorkflowEnabled;
    }

    // IsCompactLayoutable
    private Boolean IsCompactLayoutable;

    @JsonProperty("IsCompactLayoutable")
    public Boolean getIsCompactLayoutable() {
        return this.IsCompactLayoutable;
    }

    @JsonProperty("IsCompactLayoutable")
    public void setIsCompactLayoutable(Boolean IsCompactLayoutable) {
        this.IsCompactLayoutable = IsCompactLayoutable;
    }

    // KeyPrefix
    private String KeyPrefix;

    @JsonProperty("KeyPrefix")
    public String getKeyPrefix() {
        return this.KeyPrefix;
    }

    @JsonProperty("KeyPrefix")
    public void setKeyPrefix(String KeyPrefix) {
        this.KeyPrefix = KeyPrefix;
    }

    // IsDeletable
    private Boolean IsDeletable;

    @JsonProperty("IsDeletable")
    public Boolean getIsDeletable() {
        return this.IsDeletable;
    }

    @JsonProperty("IsDeletable")
    public void setIsDeletable(Boolean IsDeletable) {
        this.IsDeletable = IsDeletable;
    }

    // IsCreatable
    private Boolean IsCreatable;

    @JsonProperty("IsCreatable")
    public Boolean getIsCreatable() {
        return this.IsCreatable;
    }

    @JsonProperty("IsCreatable")
    public void setIsCreatable(Boolean IsCreatable) {
        this.IsCreatable = IsCreatable;
    }

    // IsFeedEnabled
    private Boolean IsFeedEnabled;

    @JsonProperty("IsFeedEnabled")
    public Boolean getIsFeedEnabled() {
        return this.IsFeedEnabled;
    }

    @JsonProperty("IsFeedEnabled")
    public void setIsFeedEnabled(Boolean IsFeedEnabled) {
        this.IsFeedEnabled = IsFeedEnabled;
    }

    // IsQueryable
    private Boolean IsQueryable;

    @JsonProperty("IsQueryable")
    public Boolean getIsQueryable() {
        return this.IsQueryable;
    }

    @JsonProperty("IsQueryable")
    public void setIsQueryable(Boolean IsQueryable) {
        this.IsQueryable = IsQueryable;
    }

    // DetailUrl
    private String DetailUrl;

    @JsonProperty("DetailUrl")
    public String getDetailUrl() {
        return this.DetailUrl;
    }

    @JsonProperty("DetailUrl")
    public void setDetailUrl(String DetailUrl) {
        this.DetailUrl = DetailUrl;
    }

    // EditUrl
    private String EditUrl;

    @JsonProperty("EditUrl")
    public String getEditUrl() {
        return this.EditUrl;
    }

    @JsonProperty("EditUrl")
    public void setEditUrl(String EditUrl) {
        this.EditUrl = EditUrl;
    }

    // NewUrl
    private String NewUrl;

    @JsonProperty("NewUrl")
    public String getNewUrl() {
        return this.NewUrl;
    }

    @JsonProperty("NewUrl")
    public void setNewUrl(String NewUrl) {
        this.NewUrl = NewUrl;
    }

    // EditDefinitionUrl
    private String EditDefinitionUrl;

    @JsonProperty("EditDefinitionUrl")
    public String getEditDefinitionUrl() {
        return this.EditDefinitionUrl;
    }

    @JsonProperty("EditDefinitionUrl")
    public void setEditDefinitionUrl(String EditDefinitionUrl) {
        this.EditDefinitionUrl = EditDefinitionUrl;
    }

    // HelpSettingPageName
    private String HelpSettingPageName;

    @JsonProperty("HelpSettingPageName")
    public String getHelpSettingPageName() {
        return this.HelpSettingPageName;
    }

    @JsonProperty("HelpSettingPageName")
    public void setHelpSettingPageName(String HelpSettingPageName) {
        this.HelpSettingPageName = HelpSettingPageName;
    }

    // HelpSettingPageUrl
    private String HelpSettingPageUrl;

    @JsonProperty("HelpSettingPageUrl")
    public String getHelpSettingPageUrl() {
        return this.HelpSettingPageUrl;
    }

    @JsonProperty("HelpSettingPageUrl")
    public void setHelpSettingPageUrl(String HelpSettingPageUrl) {
        this.HelpSettingPageUrl = HelpSettingPageUrl;
    }

    // RunningUserEntityAccessId
    private String RunningUserEntityAccessId;

    @JsonProperty("RunningUserEntityAccessId")
    public String getRunningUserEntityAccessId() {
        return this.RunningUserEntityAccessId;
    }

    @JsonProperty("RunningUserEntityAccessId")
    public void setRunningUserEntityAccessId(String RunningUserEntityAccessId) {
        this.RunningUserEntityAccessId = RunningUserEntityAccessId;
    }

    // PublisherId
    private String PublisherId;

    @JsonProperty("PublisherId")
    public String getPublisherId() {
        return this.PublisherId;
    }

    @JsonProperty("PublisherId")
    public void setPublisherId(String PublisherId) {
        this.PublisherId = PublisherId;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Entity Definition ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("DurableId", "Durable ID", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("QualifiedApiName", "Qualified API Name", "string", "xsd:string", 70, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("NamespacePrefix", "Namespace Prefix", "string", "xsd:string", 15, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("DeveloperName", "Developer Name", "string", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("MasterLabel", "Master Label", "string", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("Label", "Label", "string", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("PluralLabel", "Plural Label", "string", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("DefaultCompactLayoutId", "Compact Layout ID", "string", "xsd:string", 70, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("IsCustomizable", "Is Customizable?", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("IsApexTriggerable", "Is Apex Triggerable?", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("IsWorkflowEnabled", "Is Workflow Enabled?", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("IsCompactLayoutable", "Is Compact Layout Enabled?", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("KeyPrefix", "Key Prefix", "string", "xsd:string", 3, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("IsDeletable", "Deletable", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("IsCreatable", "Creatable", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("IsFeedEnabled", "Is Feed Enabled?", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("IsQueryable", "Queryable", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("DetailUrl", "Detail URL", "url", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("EditUrl", "Edit URL", "url", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField20);
        final SObjectField sObjectField21 = createField("NewUrl", "New URL", "url", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField21);
        final SObjectField sObjectField22 = createField("EditDefinitionUrl", "Edit Definition URL", "url", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField22);
        final SObjectField sObjectField23 = createField("HelpSettingPageName", "Help Setting Page Name", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField23);
        final SObjectField sObjectField24 = createField("HelpSettingPageUrl", "Help Setting Page URL", "url", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField24);
        final SObjectField sObjectField25 = createField("RunningUserEntityAccessId", "User Entity Access ID", "string", "xsd:string", 150, false, true, false, false, false, false, false);
        fields1.add(sObjectField25);
        final SObjectField sObjectField26 = createField("PublisherId", "Publisher ID", "string", "xsd:string", 70, false, true, false, false, false, false, false);
        fields1.add(sObjectField26);

        description.setLabelPlural("Entity Definitions");
        description.setLabel("Entity Definition");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/EntityDefinition/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/EntityDefinition");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/EntityDefinition/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("EntityDefinition");

        return description;
    }
}
