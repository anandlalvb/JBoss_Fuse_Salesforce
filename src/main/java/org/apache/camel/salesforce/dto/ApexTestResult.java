/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject ApexTestResult
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("ApexTestResult")
public class ApexTestResult extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // TestTimestamp
    private java.time.ZonedDateTime TestTimestamp;

    @JsonProperty("TestTimestamp")
    public java.time.ZonedDateTime getTestTimestamp() {
        return this.TestTimestamp;
    }

    @JsonProperty("TestTimestamp")
    public void setTestTimestamp(java.time.ZonedDateTime TestTimestamp) {
        this.TestTimestamp = TestTimestamp;
    }

    // Outcome
    @XStreamConverter(PicklistEnumConverter.class)
    private ApexTestResult_OutcomeEnum Outcome;

    @JsonProperty("Outcome")
    public ApexTestResult_OutcomeEnum getOutcome() {
        return this.Outcome;
    }

    @JsonProperty("Outcome")
    public void setOutcome(ApexTestResult_OutcomeEnum Outcome) {
        this.Outcome = Outcome;
    }

    // ApexClassId
    private String ApexClassId;

    @JsonProperty("ApexClassId")
    public String getApexClassId() {
        return this.ApexClassId;
    }

    @JsonProperty("ApexClassId")
    public void setApexClassId(String ApexClassId) {
        this.ApexClassId = ApexClassId;
    }

    // MethodName
    private String MethodName;

    @JsonProperty("MethodName")
    public String getMethodName() {
        return this.MethodName;
    }

    @JsonProperty("MethodName")
    public void setMethodName(String MethodName) {
        this.MethodName = MethodName;
    }

    // Message
    private String Message;

    @JsonProperty("Message")
    public String getMessage() {
        return this.Message;
    }

    @JsonProperty("Message")
    public void setMessage(String Message) {
        this.Message = Message;
    }

    // StackTrace
    private String StackTrace;

    @JsonProperty("StackTrace")
    public String getStackTrace() {
        return this.StackTrace;
    }

    @JsonProperty("StackTrace")
    public void setStackTrace(String StackTrace) {
        this.StackTrace = StackTrace;
    }

    // AsyncApexJobId
    private String AsyncApexJobId;

    @JsonProperty("AsyncApexJobId")
    public String getAsyncApexJobId() {
        return this.AsyncApexJobId;
    }

    @JsonProperty("AsyncApexJobId")
    public void setAsyncApexJobId(String AsyncApexJobId) {
        this.AsyncApexJobId = AsyncApexJobId;
    }

    // QueueItemId
    private String QueueItemId;

    @JsonProperty("QueueItemId")
    public String getQueueItemId() {
        return this.QueueItemId;
    }

    @JsonProperty("QueueItemId")
    public void setQueueItemId(String QueueItemId) {
        this.QueueItemId = QueueItemId;
    }

    // ApexLogId
    private String ApexLogId;

    @JsonProperty("ApexLogId")
    public String getApexLogId() {
        return this.ApexLogId;
    }

    @JsonProperty("ApexLogId")
    public void setApexLogId(String ApexLogId) {
        this.ApexLogId = ApexLogId;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Apex Test Result ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("TestTimestamp", "Time Started", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("Outcome", "Pass/Fail", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("ApexClassId", "Class ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("MethodName", "Method Name", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("Message", "Error Message", "string", "xsd:string", 4000, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("StackTrace", "Stack Trace", "string", "xsd:string", 4000, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("AsyncApexJobId", "Apex Job ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("QueueItemId", "Apex Test Queue Item ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("ApexLogId", "Log ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);

        description.setLabelPlural("Apex Test Results");
        description.setLabel("Apex Test Result");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/ApexTestResult/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/ApexTestResult");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/ApexTestResult/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("ApexTestResult");

        return description;
    }
}
