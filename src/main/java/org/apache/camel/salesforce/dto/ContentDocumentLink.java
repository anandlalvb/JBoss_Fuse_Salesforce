/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject ContentDocumentLink
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("ContentDocumentLink")
public class ContentDocumentLink extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // LinkedEntityId
    private String LinkedEntityId;

    @JsonProperty("LinkedEntityId")
    public String getLinkedEntityId() {
        return this.LinkedEntityId;
    }

    @JsonProperty("LinkedEntityId")
    public void setLinkedEntityId(String LinkedEntityId) {
        this.LinkedEntityId = LinkedEntityId;
    }

    // ContentDocumentId
    private String ContentDocumentId;

    @JsonProperty("ContentDocumentId")
    public String getContentDocumentId() {
        return this.ContentDocumentId;
    }

    @JsonProperty("ContentDocumentId")
    public void setContentDocumentId(String ContentDocumentId) {
        this.ContentDocumentId = ContentDocumentId;
    }

    // ShareType
    @XStreamConverter(PicklistEnumConverter.class)
    private ContentDocumentLink_ShareTypeEnum ShareType;

    @JsonProperty("ShareType")
    public ContentDocumentLink_ShareTypeEnum getShareType() {
        return this.ShareType;
    }

    @JsonProperty("ShareType")
    public void setShareType(ContentDocumentLink_ShareTypeEnum ShareType) {
        this.ShareType = ShareType;
    }

    // Visibility
    @XStreamConverter(PicklistEnumConverter.class)
    private ContentDocumentLink_VisibilityEnum Visibility;

    @JsonProperty("Visibility")
    public ContentDocumentLink_VisibilityEnum getVisibility() {
        return this.Visibility;
    }

    @JsonProperty("Visibility")
    public void setVisibility(ContentDocumentLink_VisibilityEnum Visibility) {
        this.Visibility = Visibility;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "ContentDocumentLink ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("LinkedEntityId", "Linked Entity ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("ContentDocumentId", "ContentDocument ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("IsDeleted", "Is Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("ShareType", "Share Type", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("Visibility", "Visibility", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);

        description.setLabelPlural("Content Document Link");
        description.setLabel("Content Document Link");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/ContentDocumentLink/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/ContentDocumentLink");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/ContentDocumentLink/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("ContentDocumentLink");

        return description;
    }
}
