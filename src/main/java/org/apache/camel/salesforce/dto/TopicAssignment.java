/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject TopicAssignment
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("TopicAssignment")
public class TopicAssignment extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // TopicId
    private String TopicId;

    @JsonProperty("TopicId")
    public String getTopicId() {
        return this.TopicId;
    }

    @JsonProperty("TopicId")
    public void setTopicId(String TopicId) {
        this.TopicId = TopicId;
    }

    // EntityId
    private String EntityId;

    @JsonProperty("EntityId")
    public String getEntityId() {
        return this.EntityId;
    }

    @JsonProperty("EntityId")
    public void setEntityId(String EntityId) {
        this.EntityId = EntityId;
    }

    // EntityKeyPrefix
    private String EntityKeyPrefix;

    @JsonProperty("EntityKeyPrefix")
    public String getEntityKeyPrefix() {
        return this.EntityKeyPrefix;
    }

    @JsonProperty("EntityKeyPrefix")
    public void setEntityKeyPrefix(String EntityKeyPrefix) {
        this.EntityKeyPrefix = EntityKeyPrefix;
    }

    // EntityType
    private String EntityType;

    @JsonProperty("EntityType")
    public String getEntityType() {
        return this.EntityType;
    }

    @JsonProperty("EntityType")
    public void setEntityType(String EntityType) {
        this.EntityType = EntityType;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Topic Assignment Id", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("TopicId", "Topic ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("EntityId", "Entity ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("EntityKeyPrefix", "Record Key Prefix", "string", "xsd:string", 3, false, false, false, false, false, false, true);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("EntityType", "Object Type", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);

        description.setLabelPlural("Topic Assignments");
        description.setLabel("Record");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/TopicAssignment/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/TopicAssignment");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/TopicAssignment/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("TopicAssignment");

        return description;
    }
}
