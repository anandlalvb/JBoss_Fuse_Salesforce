/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject CustomObjectUserLicenseMetrics
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("CustomObjectUserLicenseMetrics")
public class CustomObjectUserLicenseMetrics extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // MetricsDate
    private java.time.LocalDate MetricsDate;

    @JsonProperty("MetricsDate")
    public java.time.LocalDate getMetricsDate() {
        return this.MetricsDate;
    }

    @JsonProperty("MetricsDate")
    public void setMetricsDate(java.time.LocalDate MetricsDate) {
        this.MetricsDate = MetricsDate;
    }

    // UserLicenseId
    private String UserLicenseId;

    @JsonProperty("UserLicenseId")
    public String getUserLicenseId() {
        return this.UserLicenseId;
    }

    @JsonProperty("UserLicenseId")
    public void setUserLicenseId(String UserLicenseId) {
        this.UserLicenseId = UserLicenseId;
    }

    // CustomObjectId
    private String CustomObjectId;

    @JsonProperty("CustomObjectId")
    public String getCustomObjectId() {
        return this.CustomObjectId;
    }

    @JsonProperty("CustomObjectId")
    public void setCustomObjectId(String CustomObjectId) {
        this.CustomObjectId = CustomObjectId;
    }

    // CustomObjectType
    @XStreamConverter(PicklistEnumConverter.class)
    private CustomObjectUserLicenseMetrics_CustomObjectTypeEnum CustomObjectType;

    @JsonProperty("CustomObjectType")
    public CustomObjectUserLicenseMetrics_CustomObjectTypeEnum getCustomObjectType() {
        return this.CustomObjectType;
    }

    @JsonProperty("CustomObjectType")
    public void setCustomObjectType(CustomObjectUserLicenseMetrics_CustomObjectTypeEnum CustomObjectType) {
        this.CustomObjectType = CustomObjectType;
    }

    // CustomObjectName
    private String CustomObjectName;

    @JsonProperty("CustomObjectName")
    public String getCustomObjectName() {
        return this.CustomObjectName;
    }

    @JsonProperty("CustomObjectName")
    public void setCustomObjectName(String CustomObjectName) {
        this.CustomObjectName = CustomObjectName;
    }

    // ObjectCount
    private Integer ObjectCount;

    @JsonProperty("ObjectCount")
    public Integer getObjectCount() {
        return this.ObjectCount;
    }

    @JsonProperty("ObjectCount")
    public void setObjectCount(Integer ObjectCount) {
        this.ObjectCount = ObjectCount;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Custom Object Usage By User License Metrics Id", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("MetricsDate", "Metrics Date", "date", "xsd:date", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("UserLicenseId", "User License ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("CustomObjectId", "Custom Object Id", "string", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("CustomObjectType", "Custom Object Type", "picklist", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("CustomObjectName", "Custom Object Name", "string", "xsd:string", 120, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("ObjectCount", "Count of Objects assigned", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);

        description.setLabelPlural("Custom Object Usage By User License Metrics");
        description.setLabel("Custom Object Usage By User License Metric");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/CustomObjectUserLicenseMetrics/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/CustomObjectUserLicenseMetrics");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/CustomObjectUserLicenseMetrics/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("CustomObjectUserLicenseMetrics");

        return description;
    }
}
