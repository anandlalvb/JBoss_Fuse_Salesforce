/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject AuthSession
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("AuthSession")
public class AuthSession extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // UsersId
    private String UsersId;

    @JsonProperty("UsersId")
    public String getUsersId() {
        return this.UsersId;
    }

    @JsonProperty("UsersId")
    public void setUsersId(String UsersId) {
        this.UsersId = UsersId;
    }

    // NumSecondsValid
    private Integer NumSecondsValid;

    @JsonProperty("NumSecondsValid")
    public Integer getNumSecondsValid() {
        return this.NumSecondsValid;
    }

    @JsonProperty("NumSecondsValid")
    public void setNumSecondsValid(Integer NumSecondsValid) {
        this.NumSecondsValid = NumSecondsValid;
    }

    // UserType
    @XStreamConverter(PicklistEnumConverter.class)
    private AuthSession_UserTypeEnum UserType;

    @JsonProperty("UserType")
    public AuthSession_UserTypeEnum getUserType() {
        return this.UserType;
    }

    @JsonProperty("UserType")
    public void setUserType(AuthSession_UserTypeEnum UserType) {
        this.UserType = UserType;
    }

    // SourceIp
    private String SourceIp;

    @JsonProperty("SourceIp")
    public String getSourceIp() {
        return this.SourceIp;
    }

    @JsonProperty("SourceIp")
    public void setSourceIp(String SourceIp) {
        this.SourceIp = SourceIp;
    }

    // LoginType
    @XStreamConverter(PicklistEnumConverter.class)
    private AuthSession_LoginTypeEnum LoginType;

    @JsonProperty("LoginType")
    public AuthSession_LoginTypeEnum getLoginType() {
        return this.LoginType;
    }

    @JsonProperty("LoginType")
    public void setLoginType(AuthSession_LoginTypeEnum LoginType) {
        this.LoginType = LoginType;
    }

    // SessionType
    @XStreamConverter(PicklistEnumConverter.class)
    private AuthSession_SessionTypeEnum SessionType;

    @JsonProperty("SessionType")
    public AuthSession_SessionTypeEnum getSessionType() {
        return this.SessionType;
    }

    @JsonProperty("SessionType")
    public void setSessionType(AuthSession_SessionTypeEnum SessionType) {
        this.SessionType = SessionType;
    }

    // SessionSecurityLevel
    @XStreamConverter(PicklistEnumConverter.class)
    private AuthSession_SessionSecurityLevelEnum SessionSecurityLevel;

    @JsonProperty("SessionSecurityLevel")
    public AuthSession_SessionSecurityLevelEnum getSessionSecurityLevel() {
        return this.SessionSecurityLevel;
    }

    @JsonProperty("SessionSecurityLevel")
    public void setSessionSecurityLevel(AuthSession_SessionSecurityLevelEnum SessionSecurityLevel) {
        this.SessionSecurityLevel = SessionSecurityLevel;
    }

    // LogoutUrl
    private String LogoutUrl;

    @JsonProperty("LogoutUrl")
    public String getLogoutUrl() {
        return this.LogoutUrl;
    }

    @JsonProperty("LogoutUrl")
    public void setLogoutUrl(String LogoutUrl) {
        this.LogoutUrl = LogoutUrl;
    }

    // ParentId
    private String ParentId;

    @JsonProperty("ParentId")
    public String getParentId() {
        return this.ParentId;
    }

    @JsonProperty("ParentId")
    public void setParentId(String ParentId) {
        this.ParentId = ParentId;
    }

    // LoginHistoryId
    private String LoginHistoryId;

    @JsonProperty("LoginHistoryId")
    public String getLoginHistoryId() {
        return this.LoginHistoryId;
    }

    @JsonProperty("LoginHistoryId")
    public void setLoginHistoryId(String LoginHistoryId) {
        this.LoginHistoryId = LoginHistoryId;
    }

    // LoginGeoId
    private String LoginGeoId;

    @JsonProperty("LoginGeoId")
    public String getLoginGeoId() {
        return this.LoginGeoId;
    }

    @JsonProperty("LoginGeoId")
    public void setLoginGeoId(String LoginGeoId) {
        this.LoginGeoId = LoginGeoId;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Auth Session ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("UsersId", "User ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("CreatedDate", "Created", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("LastModifiedDate", "Updated", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("NumSecondsValid", "Valid For", "int", "xsd:int", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("UserType", "User Type", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("SourceIp", "Source IP", "string", "xsd:string", 39, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("LoginType", "Login", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("SessionType", "Session Type", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("SessionSecurityLevel", "Session Security Level", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("LogoutUrl", "Logout URL", "string", "xsd:string", 1500, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("ParentId", "Auth Session ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("LoginHistoryId", "Login History ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("LoginGeoId", "Login Geo Data ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);

        description.setLabelPlural("Auth Sessions");
        description.setLabel("Auth Session");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/AuthSession/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/AuthSession");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/AuthSession/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("AuthSession");

        return description;
    }
}
