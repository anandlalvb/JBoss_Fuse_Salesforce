/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject ContentDistribution
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("ContentDistribution")
public class ContentDistribution extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // ContentVersionId
    private String ContentVersionId;

    @JsonProperty("ContentVersionId")
    public String getContentVersionId() {
        return this.ContentVersionId;
    }

    @JsonProperty("ContentVersionId")
    public void setContentVersionId(String ContentVersionId) {
        this.ContentVersionId = ContentVersionId;
    }

    // ContentDocumentId
    private String ContentDocumentId;

    @JsonProperty("ContentDocumentId")
    public String getContentDocumentId() {
        return this.ContentDocumentId;
    }

    @JsonProperty("ContentDocumentId")
    public void setContentDocumentId(String ContentDocumentId) {
        this.ContentDocumentId = ContentDocumentId;
    }

    // RelatedRecordId
    private String RelatedRecordId;

    @JsonProperty("RelatedRecordId")
    public String getRelatedRecordId() {
        return this.RelatedRecordId;
    }

    @JsonProperty("RelatedRecordId")
    public void setRelatedRecordId(String RelatedRecordId) {
        this.RelatedRecordId = RelatedRecordId;
    }

    // PreferencesAllowPDFDownload
    private Boolean PreferencesAllowPDFDownload;

    @JsonProperty("PreferencesAllowPDFDownload")
    public Boolean getPreferencesAllowPDFDownload() {
        return this.PreferencesAllowPDFDownload;
    }

    @JsonProperty("PreferencesAllowPDFDownload")
    public void setPreferencesAllowPDFDownload(Boolean PreferencesAllowPDFDownload) {
        this.PreferencesAllowPDFDownload = PreferencesAllowPDFDownload;
    }

    // PreferencesAllowOriginalDownload
    private Boolean PreferencesAllowOriginalDownload;

    @JsonProperty("PreferencesAllowOriginalDownload")
    public Boolean getPreferencesAllowOriginalDownload() {
        return this.PreferencesAllowOriginalDownload;
    }

    @JsonProperty("PreferencesAllowOriginalDownload")
    public void setPreferencesAllowOriginalDownload(Boolean PreferencesAllowOriginalDownload) {
        this.PreferencesAllowOriginalDownload = PreferencesAllowOriginalDownload;
    }

    // PreferencesPasswordRequired
    private Boolean PreferencesPasswordRequired;

    @JsonProperty("PreferencesPasswordRequired")
    public Boolean getPreferencesPasswordRequired() {
        return this.PreferencesPasswordRequired;
    }

    @JsonProperty("PreferencesPasswordRequired")
    public void setPreferencesPasswordRequired(Boolean PreferencesPasswordRequired) {
        this.PreferencesPasswordRequired = PreferencesPasswordRequired;
    }

    // PreferencesNotifyOnVisit
    private Boolean PreferencesNotifyOnVisit;

    @JsonProperty("PreferencesNotifyOnVisit")
    public Boolean getPreferencesNotifyOnVisit() {
        return this.PreferencesNotifyOnVisit;
    }

    @JsonProperty("PreferencesNotifyOnVisit")
    public void setPreferencesNotifyOnVisit(Boolean PreferencesNotifyOnVisit) {
        this.PreferencesNotifyOnVisit = PreferencesNotifyOnVisit;
    }

    // PreferencesLinkLatestVersion
    private Boolean PreferencesLinkLatestVersion;

    @JsonProperty("PreferencesLinkLatestVersion")
    public Boolean getPreferencesLinkLatestVersion() {
        return this.PreferencesLinkLatestVersion;
    }

    @JsonProperty("PreferencesLinkLatestVersion")
    public void setPreferencesLinkLatestVersion(Boolean PreferencesLinkLatestVersion) {
        this.PreferencesLinkLatestVersion = PreferencesLinkLatestVersion;
    }

    // PreferencesAllowViewInBrowser
    private Boolean PreferencesAllowViewInBrowser;

    @JsonProperty("PreferencesAllowViewInBrowser")
    public Boolean getPreferencesAllowViewInBrowser() {
        return this.PreferencesAllowViewInBrowser;
    }

    @JsonProperty("PreferencesAllowViewInBrowser")
    public void setPreferencesAllowViewInBrowser(Boolean PreferencesAllowViewInBrowser) {
        this.PreferencesAllowViewInBrowser = PreferencesAllowViewInBrowser;
    }

    // PreferencesExpires
    private Boolean PreferencesExpires;

    @JsonProperty("PreferencesExpires")
    public Boolean getPreferencesExpires() {
        return this.PreferencesExpires;
    }

    @JsonProperty("PreferencesExpires")
    public void setPreferencesExpires(Boolean PreferencesExpires) {
        this.PreferencesExpires = PreferencesExpires;
    }

    // PreferencesNotifyRndtnComplete
    private Boolean PreferencesNotifyRndtnComplete;

    @JsonProperty("PreferencesNotifyRndtnComplete")
    public Boolean getPreferencesNotifyRndtnComplete() {
        return this.PreferencesNotifyRndtnComplete;
    }

    @JsonProperty("PreferencesNotifyRndtnComplete")
    public void setPreferencesNotifyRndtnComplete(Boolean PreferencesNotifyRndtnComplete) {
        this.PreferencesNotifyRndtnComplete = PreferencesNotifyRndtnComplete;
    }

    // ExpiryDate
    private java.time.ZonedDateTime ExpiryDate;

    @JsonProperty("ExpiryDate")
    public java.time.ZonedDateTime getExpiryDate() {
        return this.ExpiryDate;
    }

    @JsonProperty("ExpiryDate")
    public void setExpiryDate(java.time.ZonedDateTime ExpiryDate) {
        this.ExpiryDate = ExpiryDate;
    }

    // Password
    private String Password;

    @JsonProperty("Password")
    public String getPassword() {
        return this.Password;
    }

    @JsonProperty("Password")
    public void setPassword(String Password) {
        this.Password = Password;
    }

    // ViewCount
    private Integer ViewCount;

    @JsonProperty("ViewCount")
    public Integer getViewCount() {
        return this.ViewCount;
    }

    @JsonProperty("ViewCount")
    public void setViewCount(Integer ViewCount) {
        this.ViewCount = ViewCount;
    }

    // FirstViewDate
    private java.time.ZonedDateTime FirstViewDate;

    @JsonProperty("FirstViewDate")
    public java.time.ZonedDateTime getFirstViewDate() {
        return this.FirstViewDate;
    }

    @JsonProperty("FirstViewDate")
    public void setFirstViewDate(java.time.ZonedDateTime FirstViewDate) {
        this.FirstViewDate = FirstViewDate;
    }

    // LastViewDate
    private java.time.ZonedDateTime LastViewDate;

    @JsonProperty("LastViewDate")
    public java.time.ZonedDateTime getLastViewDate() {
        return this.LastViewDate;
    }

    @JsonProperty("LastViewDate")
    public void setLastViewDate(java.time.ZonedDateTime LastViewDate) {
        this.LastViewDate = LastViewDate;
    }

    // DistributionPublicUrl
    private String DistributionPublicUrl;

    @JsonProperty("DistributionPublicUrl")
    public String getDistributionPublicUrl() {
        return this.DistributionPublicUrl;
    }

    @JsonProperty("DistributionPublicUrl")
    public void setDistributionPublicUrl(String DistributionPublicUrl) {
        this.DistributionPublicUrl = DistributionPublicUrl;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Content Delivery ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("OwnerId", "Owner ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("Name", "Content Delivery Name", "string", "xsd:string", 100, false, false, true, false, false, false, true);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("ContentVersionId", "ContentVersion ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("ContentDocumentId", "ContentDocument ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("RelatedRecordId", "Related Record ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("PreferencesAllowPDFDownload", "Allow Download as PDF", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("PreferencesAllowOriginalDownload", "Allow Download in Original Format", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("PreferencesPasswordRequired", "Require Password to Access Content", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("PreferencesNotifyOnVisit", "Notify Me of First View or Download", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("PreferencesLinkLatestVersion", "Content Delivery Opens Latest Version", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("PreferencesAllowViewInBrowser", "Allow View in the Browser", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("PreferencesExpires", "Content Delivery Expires", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("PreferencesNotifyRndtnComplete", "Email when Preview Images are Ready", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField20);
        final SObjectField sObjectField21 = createField("ExpiryDate", "Expiration Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField21);
        final SObjectField sObjectField22 = createField("Password", "Password", "string", "xsd:string", 36, false, true, false, false, false, false, false);
        fields1.add(sObjectField22);
        final SObjectField sObjectField23 = createField("ViewCount", "View Count", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField23);
        final SObjectField sObjectField24 = createField("FirstViewDate", "First Viewed", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField24);
        final SObjectField sObjectField25 = createField("LastViewDate", "Last Viewed", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField25);
        final SObjectField sObjectField26 = createField("DistributionPublicUrl", "External Link", "string", "xsd:string", 256, false, true, false, false, false, false, false);
        fields1.add(sObjectField26);

        description.setLabelPlural("Content Deliveries");
        description.setLabel("Content Delivery");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/ContentDistribution/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/ContentDistribution");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/ContentDistribution/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("ContentDistribution");

        return description;
    }
}
