/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject AsyncApexJob
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("AsyncApexJob")
public class AsyncApexJob extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // JobType
    @XStreamConverter(PicklistEnumConverter.class)
    private AsyncApexJob_JobTypeEnum JobType;

    @JsonProperty("JobType")
    public AsyncApexJob_JobTypeEnum getJobType() {
        return this.JobType;
    }

    @JsonProperty("JobType")
    public void setJobType(AsyncApexJob_JobTypeEnum JobType) {
        this.JobType = JobType;
    }

    // ApexClassId
    private String ApexClassId;

    @JsonProperty("ApexClassId")
    public String getApexClassId() {
        return this.ApexClassId;
    }

    @JsonProperty("ApexClassId")
    public void setApexClassId(String ApexClassId) {
        this.ApexClassId = ApexClassId;
    }

    // Status
    @XStreamConverter(PicklistEnumConverter.class)
    private AsyncApexJob_StatusEnum Status;

    @JsonProperty("Status")
    public AsyncApexJob_StatusEnum getStatus() {
        return this.Status;
    }

    @JsonProperty("Status")
    public void setStatus(AsyncApexJob_StatusEnum Status) {
        this.Status = Status;
    }

    // JobItemsProcessed
    private Integer JobItemsProcessed;

    @JsonProperty("JobItemsProcessed")
    public Integer getJobItemsProcessed() {
        return this.JobItemsProcessed;
    }

    @JsonProperty("JobItemsProcessed")
    public void setJobItemsProcessed(Integer JobItemsProcessed) {
        this.JobItemsProcessed = JobItemsProcessed;
    }

    // TotalJobItems
    private Integer TotalJobItems;

    @JsonProperty("TotalJobItems")
    public Integer getTotalJobItems() {
        return this.TotalJobItems;
    }

    @JsonProperty("TotalJobItems")
    public void setTotalJobItems(Integer TotalJobItems) {
        this.TotalJobItems = TotalJobItems;
    }

    // NumberOfErrors
    private Integer NumberOfErrors;

    @JsonProperty("NumberOfErrors")
    public Integer getNumberOfErrors() {
        return this.NumberOfErrors;
    }

    @JsonProperty("NumberOfErrors")
    public void setNumberOfErrors(Integer NumberOfErrors) {
        this.NumberOfErrors = NumberOfErrors;
    }

    // CompletedDate
    private java.time.ZonedDateTime CompletedDate;

    @JsonProperty("CompletedDate")
    public java.time.ZonedDateTime getCompletedDate() {
        return this.CompletedDate;
    }

    @JsonProperty("CompletedDate")
    public void setCompletedDate(java.time.ZonedDateTime CompletedDate) {
        this.CompletedDate = CompletedDate;
    }

    // MethodName
    private String MethodName;

    @JsonProperty("MethodName")
    public String getMethodName() {
        return this.MethodName;
    }

    @JsonProperty("MethodName")
    public void setMethodName(String MethodName) {
        this.MethodName = MethodName;
    }

    // ExtendedStatus
    private String ExtendedStatus;

    @JsonProperty("ExtendedStatus")
    public String getExtendedStatus() {
        return this.ExtendedStatus;
    }

    @JsonProperty("ExtendedStatus")
    public void setExtendedStatus(String ExtendedStatus) {
        this.ExtendedStatus = ExtendedStatus;
    }

    // ParentJobId
    private String ParentJobId;

    @JsonProperty("ParentJobId")
    public String getParentJobId() {
        return this.ParentJobId;
    }

    @JsonProperty("ParentJobId")
    public void setParentJobId(String ParentJobId) {
        this.ParentJobId = ParentJobId;
    }

    // LastProcessed
    private String LastProcessed;

    @JsonProperty("LastProcessed")
    public String getLastProcessed() {
        return this.LastProcessed;
    }

    @JsonProperty("LastProcessed")
    public void setLastProcessed(String LastProcessed) {
        this.LastProcessed = LastProcessed;
    }

    // LastProcessedOffset
    private Integer LastProcessedOffset;

    @JsonProperty("LastProcessedOffset")
    public Integer getLastProcessedOffset() {
        return this.LastProcessedOffset;
    }

    @JsonProperty("LastProcessedOffset")
    public void setLastProcessedOffset(Integer LastProcessedOffset) {
        this.LastProcessedOffset = LastProcessedOffset;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Apex Job ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("JobType", "Job Type", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("ApexClassId", "Class ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("Status", "Status", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("JobItemsProcessed", "Batches Processed", "int", "xsd:int", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("TotalJobItems", "Total Batches", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("NumberOfErrors", "Failures", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("CompletedDate", "Completion Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("MethodName", "Apex Method", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("ExtendedStatus", "Status Detail", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("ParentJobId", "Apex Job ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("LastProcessed", "Last ID processed and committed", "string", "xsd:string", 15, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("LastProcessedOffset", "Offset of last ID processed and committed", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField15);

        description.setLabelPlural("Apex Jobs");
        description.setLabel("Apex Job");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/AsyncApexJob/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/AsyncApexJob");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/AsyncApexJob/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("AsyncApexJob");

        return description;
    }
}
