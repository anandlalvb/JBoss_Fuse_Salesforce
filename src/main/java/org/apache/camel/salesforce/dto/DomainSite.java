/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject DomainSite
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("DomainSite")
public class DomainSite extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // DomainId
    private String DomainId;

    @JsonProperty("DomainId")
    public String getDomainId() {
        return this.DomainId;
    }

    @JsonProperty("DomainId")
    public void setDomainId(String DomainId) {
        this.DomainId = DomainId;
    }

    // SiteId
    private String SiteId;

    @JsonProperty("SiteId")
    public String getSiteId() {
        return this.SiteId;
    }

    @JsonProperty("SiteId")
    public void setSiteId(String SiteId) {
        this.SiteId = SiteId;
    }

    // PathPrefix
    private String PathPrefix;

    @JsonProperty("PathPrefix")
    public String getPathPrefix() {
        return this.PathPrefix;
    }

    @JsonProperty("PathPrefix")
    public void setPathPrefix(String PathPrefix) {
        this.PathPrefix = PathPrefix;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Custom URL ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("DomainId", "Domain ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("SiteId", "Site ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("PathPrefix", "Path", "string", "xsd:string", 255, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);

        description.setLabelPlural("Custom URLs");
        description.setLabel("Custom URL");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/DomainSite/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/DomainSite");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/DomainSite/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("DomainSite");

        return description;
    }
}
