/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Thu Sep 06 16:51:28 IST 2018
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject EmailServicesAddress
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("EmailServicesAddress")
public class EmailServicesAddress extends AbstractDescribedSObjectBase {

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    // IsActive
    private Boolean IsActive;

    @JsonProperty("IsActive")
    public Boolean getIsActive() {
        return this.IsActive;
    }

    @JsonProperty("IsActive")
    public void setIsActive(Boolean IsActive) {
        this.IsActive = IsActive;
    }

    // LocalPart
    private String LocalPart;

    @JsonProperty("LocalPart")
    public String getLocalPart() {
        return this.LocalPart;
    }

    @JsonProperty("LocalPart")
    public void setLocalPart(String LocalPart) {
        this.LocalPart = LocalPart;
    }

    // EmailDomainName
    private String EmailDomainName;

    @JsonProperty("EmailDomainName")
    public String getEmailDomainName() {
        return this.EmailDomainName;
    }

    @JsonProperty("EmailDomainName")
    public void setEmailDomainName(String EmailDomainName) {
        this.EmailDomainName = EmailDomainName;
    }

    // AuthorizedSenders
    private String AuthorizedSenders;

    @JsonProperty("AuthorizedSenders")
    public String getAuthorizedSenders() {
        return this.AuthorizedSenders;
    }

    @JsonProperty("AuthorizedSenders")
    public void setAuthorizedSenders(String AuthorizedSenders) {
        this.AuthorizedSenders = AuthorizedSenders;
    }

    // RunAsUserId
    private String RunAsUserId;

    @JsonProperty("RunAsUserId")
    public String getRunAsUserId() {
        return this.RunAsUserId;
    }

    @JsonProperty("RunAsUserId")
    public void setRunAsUserId(String RunAsUserId) {
        this.RunAsUserId = RunAsUserId;
    }

    // FunctionId
    private String FunctionId;

    @JsonProperty("FunctionId")
    public String getFunctionId() {
        return this.FunctionId;
    }

    @JsonProperty("FunctionId")
    public void setFunctionId(String FunctionId) {
        this.FunctionId = FunctionId;
    }


    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Address ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("IsActive", "Active", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("LocalPart", "Email address", "string", "xsd:string", 64, false, false, true, false, false, false, true);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("EmailDomainName", "Email address domain", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("AuthorizedSenders", "Accept Email From", "textarea", "xsd:string", 4000, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("RunAsUserId", "User ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("FunctionId", "Service ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);

        description.setLabelPlural("Email Services Address");
        description.setLabel("Email Services Address");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/EmailServicesAddress/describe");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/EmailServicesAddress");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/EmailServicesAddress/{ID}");
        description.setUrls(sObjectDescriptionUrls1);
        description.setName("EmailServicesAddress");

        return description;
    }
}
